CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_PAIS_SEL_TODOS()
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_PAIS as correlativoPais,
				   NOMBRE as nombre,
				   CODIGO_PAIS as codigoPais
			FROM KSK_KIOSKO.KSK_PAIS
			WHERE HABILITADO = 1
			ORDER BY NOMBRE;
		OPEN C1;	
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_GENERAR_FORMATO_ARCHIVO_POR_PAIS(IN V_CORRELATIVO_PAIS INTEGER)
	BEGIN
		DECLARE V_ROL_CORPORATIVO INTEGER DEFAULT 6;
		DECLARE V_VALOR_CARGA DECIMAL(5,2) DEFAULT 5.0;
		DECLARE V_VALOR_DESCARGA DECIMAL(5,2) DEFAULT 5.0;
		
		INSERT INTO KSK_KIOSKO.KSK_FORMATO_ARCHIVO(CORRELATIVO_ROL, CORRELATIVO_PAIS,EXTENSION,DESCRIPCION,DESCARGA,CARGA,USUARIO_REGISTRA, FECHA_REGISTRA) 
		VALUES(V_ROL_CORPORATIVO,V_CORRELATIVO_PAIS,'PDF','Portable Document Format',V_VALOR_DESCARGA,V_VALOR_CARGA,'SISTEMA',(SELECT current timestamp FROM sysibm.sysdummy1));

		INSERT INTO KSK_KIOSKO.KSK_FORMATO_ARCHIVO(CORRELATIVO_ROL, CORRELATIVO_PAIS,EXTENSION,DESCRIPCION,DESCARGA,CARGA,USUARIO_REGISTRA, FECHA_REGISTRA) 
		VALUES(V_ROL_CORPORATIVO,V_CORRELATIVO_PAIS,'MP4','MPEG-4 Video Stream',V_VALOR_DESCARGA,V_VALOR_CARGA,'SISTEMA',(SELECT current timestamp FROM sysibm.sysdummy1));

		INSERT INTO KSK_KIOSKO.KSK_FORMATO_ARCHIVO(CORRELATIVO_ROL, CORRELATIVO_PAIS,EXTENSION,DESCRIPCION,DESCARGA,CARGA,USUARIO_REGISTRA, FECHA_REGISTRA) 
		VALUES(V_ROL_CORPORATIVO,V_CORRELATIVO_PAIS,'MP3','MPEG Layer 3 Audio',V_VALOR_DESCARGA,V_VALOR_CARGA,'SISTEMA',(SELECT current timestamp FROM sysibm.sysdummy1));

		INSERT INTO KSK_KIOSKO.KSK_FORMATO_ARCHIVO(CORRELATIVO_ROL, CORRELATIVO_PAIS,EXTENSION,DESCRIPCION,DESCARGA,CARGA,USUARIO_REGISTRA, FECHA_REGISTRA) 
		VALUES(V_ROL_CORPORATIVO,V_CORRELATIVO_PAIS,'JPG','Joint Photographic Experts Group JFIF format',V_VALOR_DESCARGA,V_VALOR_CARGA,'SISTEMA',(SELECT current timestamp FROM sysibm.sysdummy1));		
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_PAIS_SEL_PK(IN V_CORRELATIVO_PAIS INTEGER DEFAULT NULL)
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_PAIS as correlativoPais,
				   NOMBRE as nombre,
				   CODIGO_PAIS as codigoPais
			FROM KSK_KIOSKO.KSK_PAIS
			WHERE CORRELATIVO_PAIS = V_CORRELATIVO_PAIS;
		OPEN C1;	
	END;
/
	
CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_FORMATO_ARCHIVO_SEL_PK(IN V_CORRELATIVO_FORMATO_ARCHIVO INTEGER DEFAULT NULL)
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_FORMATO_ARCHIVO as correlativoFormatoArchivo,
				   CORRELATIVO_ROL as correlativoRol,
				   EXTENSION as extension,
				   DESCRIPCION as descripcion,
				   DESCARGA as descarga,
				   CARGA as carga				   			   
			FROM KSK_KIOSKO.KSK_FORMATO_ARCHIVO
			WHERE CORRELATIVO_FORMATO_ARCHIVO = V_CORRELATIVO_FORMATO_ARCHIVO;
		OPEN C1;	
	END;
/

CREATE OR REPLACE FUNCTION KSK_KIOSKO.FN_OBTENER_CORRELATIVO_ROL_MOVIL(IN V_CODIGO_ROL VARCHAR(10))
 RETURNS INTEGER
 LANGUAGE SQL
  BEGIN 
   DECLARE R_ROL INTEGER;  
	SELECT CORRELATIVO_ROL INTO R_ROL FROM KSK_KIOSKO.KSK_ROL 
	WHERE CODIGO_ROL = V_CODIGO_ROL
	AND ROL_MOVIL = 1;
   RETURN R_ROL; 
  END;  
/

CREATE OR REPLACE FUNCTION KSK_KIOSKO.FN_OBTENER_CORRELATIVO_PAIS(IN V_PAIS VARCHAR(10))
 RETURNS INTEGER
 LANGUAGE SQL
  BEGIN 
   DECLARE R_CORRELATIVO_PAIS INTEGER;  
   SELECT CORRELATIVO_PAIS INTO R_CORRELATIVO_PAIS FROM KSK_KIOSKO.KSK_PAIS WHERE CODIGO_PAIS = V_PAIS;
   RETURN R_CORRELATIVO_PAIS; 
  END;  
/

CREATE OR REPLACE FUNCTION KSK_KIOSKO.FN_OBTENER_ROLES_ARCHIVO(V_CORRELATIVO_ARCHIVO INTEGER)
 RETURNS VARCHAR(100)
 LANGUAGE SQL
  BEGIN 
   DECLARE ROLES_PARA_ARCHIVO VARCHAR(100)  DEFAULT '';
   FOR CURSOR_TEMPORAL AS C1 CURSOR 
   FOR 
    SELECT CONCAT(SUBSTR(ROL.NOMBRE,1,1),CAST('-' AS VARCHAR(10))) AS ABREVIATURA
    FROM KSK_KIOSKO.KSK_ARCHIVO_ROL ARCHIVO
    LEFT JOIN KSK_KIOSKO.KSK_ROL ROL ON (ARCHIVO.CORRELATIVO_ROL = ROL.CORRELATIVO_ROL)
    WHERE ARCHIVO.CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO AND ROL_MOVIL = 1
    DO SET ROLES_PARA_ARCHIVO = CONCAT(ROLES_PARA_ARCHIVO, CAST(CURSOR_TEMPORAL.ABREVIATURA AS VARCHAR(100))); 
  END FOR; 
   IF LENGTH(LTRIM(ROLES_PARA_ARCHIVO))>0 THEN
	SET ROLES_PARA_ARCHIVO = SUBSTR(ROLES_PARA_ARCHIVO,1,LENGTH(ROLES_PARA_ARCHIVO)-1);
   END IF;
   RETURN LTRIM(ROLES_PARA_ARCHIVO); 
  END;  
/

CREATE OR REPLACE FUNCTION KSK_KIOSKO.FN_OBTENER_CORRELATIVO_ROLES_ARCHIVO(V_CORRELATIVO_ARCHIVO INTEGER)
 RETURNS VARCHAR(100)
 LANGUAGE SQL
  BEGIN
   DECLARE ROLES_PARA_ARCHIVO VARCHAR(100)  DEFAULT '';
   FOR CURSOR_TEMPORAL AS C1 CURSOR
   FOR
    SELECT CONCAT(ROL.CORRELATIVO_ROL,CAST(',' AS VARCHAR(10))) AS CODIGO
    FROM KSK_KIOSKO.KSK_ARCHIVO_ROL ARCHIVO
   LEFT JOIN KSK_KIOSKO.KSK_ROL ROL ON (ARCHIVO.CORRELATIVO_ROL = ROL.CORRELATIVO_ROL)
    WHERE ARCHIVO.CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO AND ROL_MOVIL = 1
    DO SET ROLES_PARA_ARCHIVO = CONCAT(ROLES_PARA_ARCHIVO, CAST(CURSOR_TEMPORAL.CODIGO AS VARCHAR(100)));
  END FOR;
   IF LENGTH(LTRIM(ROLES_PARA_ARCHIVO))>0 THEN
	SET ROLES_PARA_ARCHIVO = SUBSTR(ROLES_PARA_ARCHIVO,1,LENGTH(ROLES_PARA_ARCHIVO)-1);
   END IF;
   RETURN LTRIM(ROLES_PARA_ARCHIVO);
  END
 /

 CREATE OR REPLACE FUNCTION KSK_KIOSKO.FN_OBTENER_PADRES_ARCHIVO(V_CORRELATIVO_COLECCION INTEGER)
RETURNS TABLE (CORRELATIVO_COLECCION INTEGER)
READS SQL DATA
NO EXTERNAL ACTION NOT DETERMINISTIC
RETURN
	WITH COLECCIONES (CORRELATIVO_COLECCION, CORRELATIVO_COLECCION_PADRE) AS
		   (
			 SELECT PADRE.CORRELATIVO_COLECCION,PADRE.CORRELATIVO_COLECCION_PADRE 
			 FROM KSK_KIOSKO.KSK_COLECCION PADRE
			 WHERE PADRE.CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION
			 UNION ALL
			 SELECT HIJO.CORRELATIVO_COLECCION, HIJO.CORRELATIVO_COLECCION_PADRE                   
			 FROM KSK_KIOSKO.KSK_COLECCION HIJO,COLECCIONES COLECCION_PADRE
			 WHERE HIJO.CORRELATIVO_COLECCION = COLECCION_PADRE.CORRELATIVO_COLECCION_PADRE
		   )
	SELECT 
	   CORRELATIVO_COLECCION
	FROM COLECCIONES;
/
	
CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_COLECCIONARCHIVO_POR_PAISROLFECSINC(IN V_PAIS VARCHAR(10),
																			  IN V_CODIGO_ROL VARCHAR(10) DEFAULT NULL,
																			  IN V_FECHA_SINCRONIZACION TIMESTAMP DEFAULT NULL
                    )
LANGUAGE SQL DYNAMIC RESULT SETS 1
 BEGIN
 
  DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR
   SELECT DISTINCT  1 as tipo,
     COL.CORRELATIVO_COLECCION  as correlativo,
     COL.CORRELATIVO_COLECCION_PADRE as correlativoColeccion,
     COL.CORRELATIVO_PAIS as correlativoPais,
     COL.CORRELATIVO_ROL as correlativoRol,
     COL.NOMBRE as nombre,
     COL.NIVEL as nivel,
     COL.NRO_ORDEN as nroOrden,
     COL.DESCRIPCION as descripcion,
     COL.COLOR as color,
     NULL as tamanho,
     NULL as extension,
     NULL as descargable,
     NULL as destacado,
     NULL as rutaImgprevia,
     NULL as rutaArchivo,
     NULL as fechaInicio,
     NULL as fechaCaducidad,
     (SELECT VARCHAR_FORMAT(current timestamp,'DD/MM/YYYY HH24:MI:SS') FROM sysibm.sysdummy1) as fechaSincronizacion,
     ELIMINADO as eliminado,
     (
     (SELECT COUNT(*) FROM KSK_KIOSKO.KSK_ARCHIVO COL_ARCHIVO INNER JOIN  KSK_KIOSKO.KSK_ARCHIVO_ROL AR ON (COL_ARCHIVO.CORRELATIVO_ARCHIVO = AR.CORRELATIVO_ARCHIVO) WHERE COL_ARCHIVO.CORRELATIVO_COLECCION = COL.CORRELATIVO_COLECCION AND COL_ARCHIVO.ELIMINADO = 0  AND AR.CORRELATIVO_ROL IN (KSK_KIOSKO.FN_OBTENER_CORRELATIVO_ROL_MOVIL(V_CODIGO_ROL)) AND ( ((SELECT current date FROM sysibm.sysdummy1) >= COL_ARCHIVO.FECHA_INICIO AND (SELECT current date FROM sysibm.sysdummy1) <= (CASE WHEN COL_ARCHIVO.FECHA_CADUCIDAD IS NULL THEN (current date + 500 YEARS)	ELSE COL_ARCHIVO.FECHA_CADUCIDAD END)) )) +
     (SELECT COUNT(*) FROM KSK_KIOSKO.KSK_ARCHIVO COL_ARCHIVO INNER JOIN  KSK_KIOSKO.KSK_ARCHIVO_ROL AR ON (COL_ARCHIVO.CORRELATIVO_ARCHIVO = AR.CORRELATIVO_ARCHIVO) WHERE COL_ARCHIVO.CORRELATIVO_COLECCION IN (SELECT CORRELATIVO_COLECCION  as correlativo from KSK_KIOSKO.KSK_COLECCION COL_HIJA where COL_HIJA.CORRELATIVO_COLECCION_PADRE = COL.CORRELATIVO_COLECCION) AND COL_ARCHIVO.ELIMINADO = 0 AND AR.CORRELATIVO_ROL IN (KSK_KIOSKO.FN_OBTENER_CORRELATIVO_ROL_MOVIL(V_CODIGO_ROL)) AND ( ((SELECT current date FROM sysibm.sysdummy1) >= COL_ARCHIVO.FECHA_INICIO AND (SELECT current date FROM sysibm.sysdummy1) <= (CASE WHEN COL_ARCHIVO.FECHA_CADUCIDAD IS NULL THEN (current date + 500 YEARS)	ELSE COL_ARCHIVO.FECHA_CADUCIDAD END)) )) +
     (SELECT COUNT(*) FROM KSK_KIOSKO.KSK_ARCHIVO COL_ARCHIVO INNER JOIN  KSK_KIOSKO.KSK_ARCHIVO_ROL AR ON (COL_ARCHIVO.CORRELATIVO_ARCHIVO = AR.CORRELATIVO_ARCHIVO) WHERE COL_ARCHIVO.CORRELATIVO_COLECCION IN (SELECT CORRELATIVO_COLECCION  as correlativo from KSK_KIOSKO.KSK_COLECCION COL_NIETA where COL_NIETA.CORRELATIVO_COLECCION_PADRE IN (SELECT CORRELATIVO_COLECCION  as correlativo from KSK_KIOSKO.KSK_COLECCION COL_HIJA where COL_HIJA.CORRELATIVO_COLECCION_PADRE = COL.CORRELATIVO_COLECCION)) AND COL_ARCHIVO.ELIMINADO = 0 AND AR.CORRELATIVO_ROL IN (KSK_KIOSKO.FN_OBTENER_CORRELATIVO_ROL_MOVIL(V_CODIGO_ROL)) AND ( ((SELECT current date FROM sysibm.sysdummy1) >= COL_ARCHIVO.FECHA_INICIO AND (SELECT current date FROM sysibm.sysdummy1) <= (CASE WHEN COL_ARCHIVO.FECHA_CADUCIDAD IS NULL THEN (current date + 500 YEARS)	ELSE COL_ARCHIVO.FECHA_CADUCIDAD END)) )) +
     (SELECT COUNT(*) FROM KSK_KIOSKO.KSK_ARCHIVO COL_ARCHIVO INNER JOIN  KSK_KIOSKO.KSK_ARCHIVO_ROL AR ON (COL_ARCHIVO.CORRELATIVO_ARCHIVO = AR.CORRELATIVO_ARCHIVO) WHERE COL_ARCHIVO.CORRELATIVO_COLECCION IN (SELECT CORRELATIVO_COLECCION  as correlativo FROM KSK_KIOSKO.KSK_COLECCION COL_BISNIETA WHERE COL_BISNIETA.CORRELATIVO_COLECCION IN (SELECT CORRELATIVO_COLECCION  as correlativo from KSK_KIOSKO.KSK_COLECCION COL_NIETA where COL_NIETA.CORRELATIVO_COLECCION_PADRE IN (SELECT CORRELATIVO_COLECCION  as correlativo from KSK_KIOSKO.KSK_COLECCION COL_HIJA where COL_HIJA.CORRELATIVO_COLECCION_PADRE = COL.CORRELATIVO_COLECCION))) AND COL_ARCHIVO.ELIMINADO = 0 AND AR.CORRELATIVO_ROL IN (KSK_KIOSKO.FN_OBTENER_CORRELATIVO_ROL_MOVIL(V_CODIGO_ROL)) AND ( ((SELECT current date FROM sysibm.sysdummy1) >= COL_ARCHIVO.FECHA_INICIO AND (SELECT current date FROM sysibm.sysdummy1) <= (CASE WHEN COL_ARCHIVO.FECHA_CADUCIDAD IS NULL THEN (current date + 500 YEARS)	ELSE COL_ARCHIVO.FECHA_CADUCIDAD END)) )) +
     (SELECT COUNT(*) FROM KSK_KIOSKO.KSK_ARCHIVO COL_ARCHIVO INNER JOIN  KSK_KIOSKO.KSK_ARCHIVO_ROL AR ON (COL_ARCHIVO.CORRELATIVO_ARCHIVO = AR.CORRELATIVO_ARCHIVO) WHERE COL_ARCHIVO.CORRELATIVO_COLECCION IN (SELECT CORRELATIVO_COLECCION  as correlativo FROM KSK_KIOSKO.KSK_COLECCION COL_TATARANIETA WHERE COL_TATARANIETA.CORRELATIVO_COLECCION IN (SELECT CORRELATIVO_COLECCION  as correlativo from KSK_KIOSKO.KSK_COLECCION COL_BISNIETA where COL_BISNIETA.CORRELATIVO_COLECCION_PADRE IN (SELECT CORRELATIVO_COLECCION  as correlativo from KSK_KIOSKO.KSK_COLECCION COL_NIETA where COL_NIETA.CORRELATIVO_COLECCION_PADRE IN (SELECT CORRELATIVO_COLECCION  as correlativo from KSK_KIOSKO.KSK_COLECCION COL_HIJA where COL_HIJA.CORRELATIVO_COLECCION_PADRE = COL.CORRELATIVO_COLECCION)))) AND COL_ARCHIVO.ELIMINADO = 0 AND AR.CORRELATIVO_ROL IN (KSK_KIOSKO.FN_OBTENER_CORRELATIVO_ROL_MOVIL(V_CODIGO_ROL)) AND ( ((SELECT current date FROM sysibm.sysdummy1) >= COL_ARCHIVO.FECHA_INICIO AND (SELECT current date FROM sysibm.sysdummy1) <= (CASE WHEN COL_ARCHIVO.FECHA_CADUCIDAD IS NULL THEN (current date + 500 YEARS)	ELSE COL_ARCHIVO.FECHA_CADUCIDAD END)) )) 
     ) as hijos,
	 null as eliminarPorRol
   FROM KSK_KIOSKO.KSK_COLECCION COL
   WHERE COL.CORRELATIVO_PAIS = KSK_KIOSKO.FN_OBTENER_CORRELATIVO_PAIS(V_PAIS)
      AND COL.FECHA_SINCRONIZACION >= V_FECHA_SINCRONIZACION
   UNION ALL
   SELECT DISTINCT 2 as tipo,
     ARCH.CORRELATIVO_ARCHIVO as correlativo,
     ARCH.CORRELATIVO_COLECCION as correlativoColeccion,
     ARCH.CORRELATIVO_PAIS as correlativoPais,
     ARCH.CORRELATIVO_ROL as correlativoRol,
     ARCH.NOMBRE as nombre,
     NULL AS nivel,
     ARCH.NRO_ORDEN as nroOrden,
     ARCH.DESCRIPCION as descripcion,
     NULL AS color,
     ARCH.TAMANHO as tamanho,
     ARCH.EXTENSION as extension,
     ARCH.DESCARGABLE as descargable,
     ARCH.DESTACADO as destacado,
     ARCH.RUTA_IMGPREVIA as rutaImgprevia,
     ARCH.RUTA_ARCHIVO as rutaArchivo,
     VARCHAR_FORMAT(ARCH.FECHA_INICIO,'DD/MM/YYYY HH24:MI:SS') as fechaInicio,
	 (CASE WHEN ARCH.FECHA_CADUCIDAD IS NULL THEN
			VARCHAR_FORMAT((current date + 500 YEARS),'DD/MM/YYYY HH24:MI:SS')
		ELSE
			VARCHAR_FORMAT(ARCH.FECHA_CADUCIDAD,'DD/MM/YYYY HH24:MI:SS')
		END ) as fechaCaducidad,
     (SELECT VARCHAR_FORMAT(current timestamp,'DD/MM/YYYY HH24:MI:SS') FROM sysibm.sysdummy1) as fechaSincronizacion,
     ARCH.ELIMINADO as eliminado,
	 null as hijos,
	(CASE WHEN (SELECT COUNT(R.CORRELATIVO_ARCHIVO) FROM KSK_KIOSKO.KSK_ARCHIVO_ROL R WHERE R.CORRELATIVO_ROL  IN (KSK_KIOSKO.FN_OBTENER_CORRELATIVO_ROL_MOVIL(V_CODIGO_ROL)) AND R.CORRELATIVO_ARCHIVO = ARCH.CORRELATIVO_ARCHIVO)!=0 THEN 0 ELSE 1 END) as eliminarPorRol
   FROM KSK_KIOSKO.KSK_ARCHIVO ARCH
	 INNER JOIN  KSK_KIOSKO.KSK_ARCHIVO_ROL AR ON (ARCH.CORRELATIVO_ARCHIVO = AR.CORRELATIVO_ARCHIVO)
   WHERE ARCH.CORRELATIVO_PAIS = KSK_KIOSKO.FN_OBTENER_CORRELATIVO_PAIS(V_PAIS)
		AND ((ARCH.FECHA_SINCRONIZACION >= V_FECHA_SINCRONIZACION AND ARCH.FECHA_MODIFICACION IS NOT NULL)
		OR (ARCH.FECHA_SINCRONIZACION >= V_FECHA_SINCRONIZACION
		AND ((SELECT current date FROM sysibm.sysdummy1) >= ARCH.FECHA_INICIO
		AND (SELECT current date FROM sysibm.sysdummy1) <= (CASE WHEN ARCH.FECHA_CADUCIDAD IS NULL THEN (current DATE + 500 YEARS) ELSE ARCH.FECHA_CADUCIDAD END))
		AND AR.CORRELATIVO_ROL IN (KSK_KIOSKO.FN_OBTENER_CORRELATIVO_ROL_MOVIL(V_CODIGO_ROL))));
  OPEN C1;
 END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_FORMATO_ARCHIVO_UPD(IN V_CORRELATIVO_FORMATO_ARCHIVO INTEGER
															   ,IN V_ROL INTEGER
															   ,IN V_EXTENSION VARCHAR(5)
															   ,IN V_DESCRIPCION VARGRAPHIC(100)
															   ,IN V_DESCARGA NUMERIC(9,2)
															   ,IN V_CARGA NUMERIC(9,2)													  
															   ,IN V_USUARIO_MODIFICACION VARCHAR(50)														  
															  )
	BEGIN	
	UPDATE KSK_KIOSKO.KSK_FORMATO_ARCHIVO 
	SET CORRELATIVO_ROL = V_ROL,
		EXTENSION = V_EXTENSION,
		DESCRIPCION = V_DESCRIPCION,
		DESCARGA = V_DESCARGA,
		CARGA = V_CARGA,
		USUARIO_MODIFICACION = V_USUARIO_MODIFICACION,
		FECHA_MODIFICACION = (SELECT current timestamp FROM sysibm.sysdummy1)
	WHERE CORRELATIVO_FORMATO_ARCHIVO = V_CORRELATIVO_FORMATO_ARCHIVO;
	END;
/


CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_BITACORA_INS(IN V_DESCRIPCION VARCHAR(150)
														,IN V_ACCION VARCHAR(150)
														,IN V_NOMBRE_ARCHIVO VARCHAR(150)
														,IN V_TAMANHO_ARCHIVO VARCHAR(150)
														,IN V_TIPO_ARCHIVO VARCHAR(150)
														,IN V_TIPO_DESCARGA VARCHAR(150)
														,IN V_USUARIO VARCHAR(150)
														,IN V_PLATAFORMA VARCHAR(150)
														,IN V_DISPOSITIVO_IDENTIFICADOR VARCHAR(150)
														,IN V_FECHA_BITACORA TIMESTAMP
														)
	BEGIN	
	INSERT INTO KSK_KIOSKO.KSK_BITACORA( DESCRIPCION
										,ACCION
										,NOMBRE_ARCHIVO
										,TAMANHO_ARCHIVO
										,TIPO_ARCHIVO
										,TIPO_DESCARGA
										,USUARIO
										,PLATAFORMA
										,DISPOSITIVO_IDENTIFICADOR
										,FECHA_BITACORA)
    VALUES(V_DESCRIPCION
		   ,V_ACCION
		   ,V_NOMBRE_ARCHIVO
		   ,V_TAMANHO_ARCHIVO
		   ,V_TIPO_ARCHIVO
		   ,V_TIPO_DESCARGA
		   ,V_USUARIO
		   ,V_PLATAFORMA
		   ,V_DISPOSITIVO_IDENTIFICADOR
		   ,V_FECHA_BITACORA);
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_SESION_WEB_INS(IN V_CORRELATIVO_PAIS INTEGER,
														  IN V_USUARIO VARCHAR(50),
														  IN V_CLAVE VARCHAR(50),
														  IN V_TOKEN VARCHAR(100),
														  IN V_CORRELATIVO_ROL INTEGER
														)
	BEGIN
		INSERT INTO KSK_KIOSKO.KSK_SESION_WEB(CORRELATIVO_PAIS
											  ,USUARIO
											  ,CLAVE
											  ,TOKEN
											  ,FECHA_REGISTRO
											  ,CORRELATIVO_ROL)
		VALUES(V_CORRELATIVO_PAIS
			   ,V_USUARIO
			   ,V_CLAVE
			   ,V_TOKEN
			   ,(SELECT current timestamp FROM sysibm.sysdummy1)
			   ,V_CORRELATIVO_ROL);
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ELIMINAR_SESIONES_EXPIRADAS_POR_USR(IN V_USUARIO VARCHAR(50))
	BEGIN	
		DECLARE V_VALOR_PARAMETRO VARCHAR(50) DEFAULT '0';
		
		SELECT VALOR_PARAMETRO INTO V_VALOR_PARAMETRO 
		FROM KSK_KIOSKO.KSK_PARAMETRO 
		WHERE UPPER(TRIM(NOMBRE_PARAMETRO)) = UPPER(TRIM('HorasExpiracionToken'));
		
		DELETE FROM KSK_KIOSKO.KSK_SESION_WEB
		WHERE UPPER(TRIM(USUARIO)) = UPPER(TRIM(V_USUARIO))
			  AND ((SELECT current timestamp FROM sysibm.sysdummy1) > (TIMESTAMP(FECHA_REGISTRO) + CAST(V_VALOR_PARAMETRO AS INTEGER) HOURS));	
	END;
/												

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_FORMATO_ARCHIVO_EXT_DESC_POR_PAIS(IN V_CORRELATIVO_PAIS INTEGER)
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT EXTENSION as extension,
				   DESCARGA as descarga
			FROM KSK_KIOSKO.KSK_FORMATO_ARCHIVO
			WHERE CORRELATIVO_PAIS = V_CORRELATIVO_PAIS;
		OPEN C1;	
	END;
/


CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_COLECCION_SEL_POR_COLECCIONPADRE(IN V_CORRELATIVO_COLECCION_PADRE INTEGER, IN V_CORRELATIVO_PAIS INTEGER)
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR
			SELECT COL.CORRELATIVO_COLECCION as correlativoColeccion,
				   COL.CORRELATIVO_COLECCION_PADRE as correlativoColeccionPadre,
				   COL.CORRELATIVO_ROL as correlativoRol,
				   COL.NOMBRE as nombre,
				   COL.NIVEL as nivel,
				   COL.NRO_ORDEN as nroOrden,
				   COL.DESCRIPCION as descripcion,
				   (SELECT COUNT(*) FROM KSK_KIOSKO.KSK_COLECCION COL_HIJA WHERE COL_HIJA.CORRELATIVO_COLECCION_PADRE = COL.CORRELATIVO_COLECCION AND COL_HIJA.ELIMINADO = 0) as cantidadColeccionesHijas
			FROM KSK_KIOSKO.KSK_COLECCION COL
			WHERE COL.CORRELATIVO_COLECCION_PADRE = V_CORRELATIVO_COLECCION_PADRE
			AND COL.CORRELATIVO_PAIS = V_CORRELATIVO_PAIS
			AND COL.ELIMINADO = 0
			ORDER BY COL.NRO_ORDEN;
	
		DECLARE C2 CURSOR WITH RETURN TO CLIENT FOR
			SELECT COL.CORRELATIVO_COLECCION as correlativoColeccion,
				   COL.CORRELATIVO_COLECCION_PADRE as correlativoColeccionPadre,
				   COL.CORRELATIVO_ROL as correlativoRol,
				   COL.NOMBRE as nombre,
				   COL.NIVEL as nivel,
				   COL.NRO_ORDEN as nroOrden,
				   COL.DESCRIPCION as descripcion,
				   (SELECT COUNT(*) FROM KSK_KIOSKO.KSK_COLECCION COL_HIJA WHERE COL_HIJA.CORRELATIVO_COLECCION_PADRE = COL.CORRELATIVO_COLECCION AND COL_HIJA.ELIMINADO = 0) as cantidadColeccionesHijas
			FROM KSK_KIOSKO.KSK_COLECCION COL
			WHERE COL.CORRELATIVO_COLECCION_PADRE IS NULL
			AND COL.CORRELATIVO_PAIS = V_CORRELATIVO_PAIS
			AND COL.ELIMINADO = 0
			ORDER BY COL.NRO_ORDEN;
	
		IF V_CORRELATIVO_COLECCION_PADRE IS NULL THEN
			OPEN C2;
		ELSE
			OPEN C1;
		END IF;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_COLECCION_INS(IN V_CORRELATIVO_COLECCION_PADRE INTEGER
														,IN V_CORRELATIVO_PAIS INTEGER
														,IN V_CORRELATIVO_ROL INTEGER
														,IN V_NOMBRE VARGRAPHIC(50)
														,IN V_NIVEL SMALLINT
														,IN V_NRO_ORDEN SMALLINT
														,IN V_DESCRIPCION VARGRAPHIC(100)
														,IN V_COLOR VARCHAR(20)
														,IN V_USUARIO_REGISTRA VARCHAR(50)
														)
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN
	
	DECLARE V_CORRELATIVO_COLECCION INTEGER;
	
	DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR
			SELECT 1 as codigoRespuesta FROM sysibm.sysdummy1;
	DECLARE C2 CURSOR WITH RETURN TO CLIENT FOR
			SELECT 2 as codigoRespuesta FROM sysibm.sysdummy1;
	
	IF V_CORRELATIVO_COLECCION_PADRE IS NULL THEN
		SELECT CORRELATIVO_COLECCION INTO V_CORRELATIVO_COLECCION 
		FROM KSK_KIOSKO.KSK_COLECCION 
		WHERE ELIMINADO = 0
		AND CORRELATIVO_COLECCION_PADRE IS NULL
		AND UPPER(TRIM(NOMBRE)) = UPPER(TRIM(V_NOMBRE))
		AND CORRELATIVO_PAIS = V_CORRELATIVO_PAIS;
	ELSE	
		SELECT CORRELATIVO_COLECCION INTO V_CORRELATIVO_COLECCION 
		FROM KSK_KIOSKO.KSK_COLECCION 
		WHERE ELIMINADO = 0
		AND CORRELATIVO_COLECCION_PADRE = V_CORRELATIVO_COLECCION_PADRE
		AND UPPER(TRIM(NOMBRE)) = UPPER(TRIM(V_NOMBRE));
	END IF;
	
	IF V_CORRELATIVO_COLECCION IS NOT NULL THEN
		OPEN C2;
	ELSE
		IF V_CORRELATIVO_COLECCION_PADRE IS NULL THEN
			UPDATE KSK_KIOSKO.KSK_COLECCION
			SET NRO_ORDEN = NRO_ORDEN + 1
			WHERE CORRELATIVO_COLECCION_PADRE IS NULL
			AND NRO_ORDEN >= V_NRO_ORDEN
			AND CORRELATIVO_PAIS = V_CORRELATIVO_PAIS
			AND ELIMINADO = 0;
		ELSE
			UPDATE KSK_KIOSKO.KSK_COLECCION
			SET NRO_ORDEN = NRO_ORDEN + 1
			WHERE CORRELATIVO_COLECCION_PADRE = V_CORRELATIVO_COLECCION_PADRE			
			AND NRO_ORDEN >= V_NRO_ORDEN
			AND ELIMINADO = 0;
		END IF;
	
		INSERT INTO KSK_KIOSKO.KSK_COLECCION( CORRELATIVO_COLECCION_PADRE
										,CORRELATIVO_PAIS
										,CORRELATIVO_ROL
										,NOMBRE
										,NIVEL
										,NRO_ORDEN
										,DESCRIPCION
										,COLOR
										,FECHA_REGISTRA
										,USUARIO_REGISTRA
										,FECHA_SINCRONIZACION
										,ELIMINADO)
    	VALUES(V_CORRELATIVO_COLECCION_PADRE
    		,V_CORRELATIVO_PAIS
		   	,V_CORRELATIVO_ROL
		   	,V_NOMBRE
		   	,V_NIVEL
		   	,V_NRO_ORDEN
		   	,V_DESCRIPCION
		   	,V_COLOR
		   	,(SELECT current timestamp FROM sysibm.sysdummy1)
		   	,V_USUARIO_REGISTRA
		   	,(SELECT current timestamp FROM sysibm.sysdummy1)
		   	,0);
	
		OPEN C1;	
	END IF;
	
	END;
/				  
	
CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_COLECCION_DEL(IN V_CORRELATIVO_COLECCION INTEGER, IN V_USUARIO_MODIFICACION VARCHAR(50))
LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN
		DECLARE TOTAL_COLECCIONES_HIJAS INTEGER DEFAULT 0;
		DECLARE TOTAL_ARCHIVOS INTEGER DEFAULT 0;
		DECLARE CORR_COLECCION_PADRE INTEGER DEFAULT NULL;

		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR
			SELECT 1 as codigoRespuesta FROM sysibm.sysdummy1;

		DECLARE C2 CURSOR WITH RETURN TO CLIENT FOR
			SELECT 2 as codigoRespuesta FROM sysibm.sysdummy1;

		SELECT COUNT(*) INTO TOTAL_COLECCIONES_HIJAS FROM KSK_KIOSKO.KSK_COLECCION COL WHERE COL.CORRELATIVO_COLECCION_PADRE = V_CORRELATIVO_COLECCION AND COL.ELIMINADO = 0;
		SELECT COUNT(*) INTO TOTAL_ARCHIVOS FROM KSK_KIOSKO.KSK_ARCHIVO AR WHERE AR.CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION AND AR.ELIMINADO = 0;
		SELECT CORRELATIVO_COLECCION_PADRE INTO CORR_COLECCION_PADRE FROM KSK_KIOSKO.KSK_COLECCION WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION;


		IF TOTAL_COLECCIONES_HIJAS + TOTAL_ARCHIVOS <=0 THEN		
		
			IF CORR_COLECCION_PADRE IS NULL THEN
				UPDATE KSK_KIOSKO.KSK_COLECCION
				SET NRO_ORDEN = NRO_ORDEN - 1
				WHERE ELIMINADO = 0
				AND CORRELATIVO_COLECCION_PADRE IS NULL
				AND CORRELATIVO_PAIS = (SELECT CORRELATIVO_PAIS FROM KSK_KIOSKO.KSK_COLECCION WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION)
				AND NRO_ORDEN > (SELECT NRO_ORDEN FROM KSK_KIOSKO.KSK_COLECCION WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION); 			
			ELSE 			
				UPDATE KSK_KIOSKO.KSK_COLECCION
				SET NRO_ORDEN = NRO_ORDEN - 1
				WHERE ELIMINADO = 0
				AND CORRELATIVO_COLECCION_PADRE = CORR_COLECCION_PADRE
				AND NRO_ORDEN > (SELECT NRO_ORDEN FROM KSK_KIOSKO.KSK_COLECCION WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION); 			
			END IF;

			UPDATE KSK_KIOSKO.KSK_COLECCION
			SET ELIMINADO = 1,
				USUARIO_MODIFICACION = V_USUARIO_MODIFICACION,
				FECHA_MODIFICACION = (SELECT current timestamp FROM sysibm.sysdummy1)
			WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION;
			OPEN C1;
			
		ELSE
		
			OPEN C2;
			
		END IF;
	END;
/ 			

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_COLECCION_SEL_PK(IN V_CORRELATIVO_COLECCION INTEGER DEFAULT NULL)
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT COL.CORRELATIVO_COLECCION as correlativoColeccion,
				   COALESCE(COL.CORRELATIVO_COLECCION_PADRE,0) as correlativoColeccionPadre,
				   (SELECT P.NOMBRE FROM KSK_KIOSKO.KSK_COLECCION P WHERE P.CORRELATIVO_COLECCION = COL.CORRELATIVO_COLECCION_PADRE) as nombreColeccionPadre,
				   COL.NOMBRE as nombre,
				   COL.NIVEL as nivel,			
				   COL.NRO_ORDEN as nroOrden,
				   COL.DESCRIPCION as descripcion,
				   COL.COLOR AS color
			FROM KSK_KIOSKO.KSK_COLECCION COL
			WHERE COL.CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION;
		OPEN C1;	
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_COLECCION_UPD(IN V_CORRELATIVO_COLECCION INTEGER
														,IN V_CORRELATIVO_COLECCION_PADRE INTEGER
														,IN V_CORRELATIVO_ROL INTEGER
														,IN V_NOMBRE VARGRAPHIC(50)
														,IN V_NIVEL INTEGER
														,IN V_NRO_ORDEN INTEGER
														,IN V_DESCRIPCION VARGRAPHIC(100)
														,IN V_COLOR VARCHAR(20)
														,IN V_USUARIO_MODIFICACION VARCHAR(50)
														)
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN
	
	DECLARE V_COR_COLECCION INTEGER;	
	
	DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR
			SELECT 1 as codigoRespuesta FROM sysibm.sysdummy1;
	DECLARE C2 CURSOR WITH RETURN TO CLIENT FOR
			SELECT 2 as codigoRespuesta FROM sysibm.sysdummy1;	
	
	
	IF V_CORRELATIVO_COLECCION_PADRE IS NULL THEN
		SELECT CORRELATIVO_COLECCION INTO V_COR_COLECCION
		FROM KSK_KIOSKO.KSK_COLECCION
		WHERE ELIMINADO = 0
		AND CORRELATIVO_COLECCION_PADRE IS NULL
		AND UPPER(TRIM(NOMBRE)) = UPPER(TRIM(V_NOMBRE))
		AND CORRELATIVO_COLECCION <> V_CORRELATIVO_COLECCION
		AND CORRELATIVO_PAIS = (SELECT CORRELATIVO_PAIS FROM KSK_KIOSKO.KSK_COLECCION WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION);
	ELSE
		SELECT CORRELATIVO_COLECCION INTO V_COR_COLECCION
		FROM KSK_KIOSKO.KSK_COLECCION
		WHERE ELIMINADO = 0
		AND CORRELATIVO_COLECCION_PADRE = V_CORRELATIVO_COLECCION_PADRE
		AND UPPER(TRIM(NOMBRE)) = UPPER(TRIM(V_NOMBRE))
		AND CORRELATIVO_COLECCION <> V_CORRELATIVO_COLECCION;
	END IF;
	
	IF V_COR_COLECCION IS NOT NULL THEN
		OPEN C2;
	ELSE
		IF V_CORRELATIVO_COLECCION_PADRE IS NULL THEN
			UPDATE KSK_KIOSKO.KSK_COLECCION
			SET NRO_ORDEN = (SELECT NRO_ORDEN FROM KSK_KIOSKO.KSK_COLECCION WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION)
			WHERE ELIMINADO = 0 AND NRO_ORDEN = V_NRO_ORDEN AND CORRELATIVO_COLECCION_PADRE IS NULL 
			AND CORRELATIVO_PAIS = (SELECT CORRELATIVO_PAIS FROM KSK_KIOSKO.KSK_COLECCION WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION);
		ELSE
			UPDATE KSK_KIOSKO.KSK_COLECCION
			SET NRO_ORDEN = (SELECT NRO_ORDEN FROM KSK_KIOSKO.KSK_COLECCION WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION)
			WHERE ELIMINADO = 0 AND NRO_ORDEN = V_NRO_ORDEN AND CORRELATIVO_COLECCION_PADRE = V_CORRELATIVO_COLECCION_PADRE;
		END IF;
	
		UPDATE KSK_KIOSKO.KSK_COLECCION
		SET CORRELATIVO_COLECCION_PADRE = V_CORRELATIVO_COLECCION_PADRE,
			CORRELATIVO_ROL = V_CORRELATIVO_ROL,
			NOMBRE = V_NOMBRE,
			NIVEL = V_NIVEL,
			NRO_ORDEN = V_NRO_ORDEN,
			DESCRIPCION = V_DESCRIPCION,
			COLOR = V_COLOR,
			USUARIO_MODIFICACION = V_USUARIO_MODIFICACION,
			FECHA_MODIFICACION = (SELECT current timestamp FROM sysibm.sysdummy1),
			FECHA_SINCRONIZACION = (SELECT current timestamp FROM sysibm.sysdummy1)
		WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION;
		OPEN C1;
	END IF;
	
	END;
/


CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ARCHIVO_SEL_POR_CORRELPAD_NOMBR_DESC(IN V_CORRELATIVO_COLECCION INTEGER
															   ,IN V_NOMBRE VARGRAPHIC(50)
															   ,IN V_DESCRIPCION VARGRAPHIC(200)
															   ,IN V_CORRELATIVO_PAIS INTEGER
															  )
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR
			SELECT CORRELATIVO_ARCHIVO as correlativoArchivo,
				   CORRELATIVO_COLECCION as correlativoColeccion,
				   CORRELATIVO_ROL as correlativoRol,
				   KSK_KIOSKO.FN_OBTENER_CODIGO_PAIS(CORRELATIVO_PAIS) as pais,
				   DESCARGABLE as descargable,
				   DESCRIPCION as descripcion,
				   DESTACADO as destacado,
				   EXTENSION as extension,
				   VARCHAR_FORMAT(FECHA_CADUCIDAD, 'YYYY-MM-DD') as fechaCaducidad,
				   VARCHAR_FORMAT(FECHA_INICIO, 'YYYY-MM-DD') as fechaInicio,
				   NOMBRE as nombre,
				   NRO_ORDEN as nroOrden,
				   RUTA_ARCHIVO as rutaArchivo,
				   RUTA_IMGPREVIA as rutaImgprevia,
				   TAMANHO as tamanho,
				   CASE
					WHEN (SELECT current date FROM sysibm.sysdummy1) < DATE(FECHA_INICIO)  THEN 'Por publicar'
					WHEN ((SELECT current date FROM sysibm.sysdummy1) >= DATE(FECHA_INICIO) AND ( FECHA_CADUCIDAD IS NULL OR (SELECT current date FROM sysibm.sysdummy1) <= DATE(FECHA_CADUCIDAD)))  THEN 'Publicado'
					WHEN (SELECT current date FROM sysibm.sysdummy1) > DATE(FECHA_CADUCIDAD)  THEN 'Caducado'
				   END as estado,
				   KSK_KIOSKO.FN_OBTENER_ROLES_ARCHIVO(CORRELATIVO_ARCHIVO) as roles
			FROM KSK_KIOSKO.KSK_ARCHIVO
			WHERE ((LENGTH(TRIM(COALESCE(V_NOMBRE,''))) > 0 AND UPPER(TRIM(NOMBRE)) LIKE '%' || UPPER(TRIM(COALESCE(V_NOMBRE,''))) || '%')
			OR (LENGTH(TRIM(COALESCE(V_DESCRIPCION,''))) > 0 AND UPPER(TRIM(DESCRIPCION)) LIKE '%' || UPPER(TRIM(COALESCE(V_DESCRIPCION,''))) || '%'))
			AND ELIMINADO = 0
			AND CORRELATIVO_PAIS = V_CORRELATIVO_PAIS
			ORDER BY NOMBRE ASC;
	
		DECLARE C2 CURSOR WITH RETURN TO CLIENT FOR
			SELECT CORRELATIVO_ARCHIVO as correlativoArchivo,
				   CORRELATIVO_COLECCION as correlativoColeccion,
				   CORRELATIVO_ROL as correlativoRol,
				   KSK_KIOSKO.FN_OBTENER_CODIGO_PAIS(CORRELATIVO_PAIS) as pais,
				   DESCARGABLE as descargable,
				   DESCRIPCION as descripcion,
				   DESTACADO as destacado,
				   EXTENSION as extension,
				   VARCHAR_FORMAT(FECHA_CADUCIDAD, 'YYYY-MM-DD') as fechaCaducidad,
				   VARCHAR_FORMAT(FECHA_INICIO, 'YYYY-MM-DD') as fechaInicio,
				   NOMBRE as nombre,
				   NRO_ORDEN as nroOrden,
				   RUTA_ARCHIVO as rutaArchivo,
				   RUTA_IMGPREVIA as rutaImgprevia,
				   TAMANHO as tamanho,
				   CASE
					WHEN (SELECT current date FROM sysibm.sysdummy1) < DATE(FECHA_INICIO)  THEN 'Por publicar'
					WHEN ((SELECT current date FROM sysibm.sysdummy1) >= DATE(FECHA_INICIO) AND ( FECHA_CADUCIDAD IS NULL OR (SELECT current date FROM sysibm.sysdummy1) <= DATE(FECHA_CADUCIDAD)))  THEN 'Publicado'
					WHEN (SELECT current date FROM sysibm.sysdummy1) > DATE(FECHA_CADUCIDAD)  THEN 'Caducado'
				   END as estado,
				   KSK_KIOSKO.FN_OBTENER_ROLES_ARCHIVO(CORRELATIVO_ARCHIVO) as roles
			FROM KSK_KIOSKO.KSK_ARCHIVO
			WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION
			AND CORRELATIVO_PAIS = V_CORRELATIVO_PAIS
			AND ELIMINADO = 0
			ORDER BY NRO_ORDEN ASC;
		IF V_CORRELATIVO_COLECCION IS NULL THEN
			OPEN C1;
		ELSE
			OPEN C2;
		END IF;
	END;
/

	
CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ARCHIVO_SEL_PK(IN V_CORRELATIVO_ARCHIVO INTEGER DEFAULT NULL)
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR
			SELECT CORRELATIVO_ARCHIVO as correlativoArchivo,
				   CORRELATIVO_COLECCION as correlativoColeccion,
				   KSK_KIOSKO.FN_OBTENER_CODIGO_PAIS(CORRELATIVO_PAIS) as pais,
				   NOMBRE as nombre,
				   DESCRIPCION as descripcion,
				   TAMANHO as tamanho,
				   EXTENSION as extension,
				   NRO_ORDEN as nroOrden,
				   DESCARGABLE as descargable,
				   DESTACADO as destacado,
				   RUTA_IMGPREVIA as rutaImgprevia,
				   RUTA_ARCHIVO AS rutaArchivo,
				   VARCHAR_FORMAT(FECHA_INICIO, 'YYYY-MM-DD') as fechaInicio,
				   VARCHAR_FORMAT(FECHA_CADUCIDAD, 'YYYY-MM-DD') as fechaCaducidad,
				   CASE
					WHEN (SELECT current date FROM sysibm.sysdummy1) < DATE(FECHA_INICIO)  THEN 'Por publicar'
					WHEN ((SELECT current date FROM sysibm.sysdummy1) >= DATE(FECHA_INICIO) AND ( FECHA_CADUCIDAD IS NULL OR (SELECT current date FROM sysibm.sysdummy1) <= DATE(FECHA_CADUCIDAD)))  THEN 'Publicado'
					WHEN (SELECT current date FROM sysibm.sysdummy1) > DATE(FECHA_CADUCIDAD)  THEN 'Caducado'
				   END as estado,
				   KSK_KIOSKO.FN_OBTENER_CORRELATIVO_ROLES_ARCHIVO(CORRELATIVO_ARCHIVO) as roles
			FROM KSK_KIOSKO.KSK_ARCHIVO
			WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO;
		OPEN C1;
	END;
/



CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ARCHIVO_UPD(IN V_CORRELATIVO_ARCHIVO INTEGER
													   ,IN V_CORRELATIVO_ROL INTEGER
													   ,IN V_NOMBRE VARGRAPHIC(50)
													   ,IN V_DESCRIPCION VARGRAPHIC(200)
													   ,IN V_TAMANHO VARCHAR(10)
													   ,IN V_EXTENSION VARCHAR(5)
													   ,IN V_NRO_ORDEN SMALLINT
													   ,IN V_DESCARGABLE SMALLINT
													   ,IN V_DESTACADO SMALLINT
													   ,IN V_RUTA_IMGPREVIA VARCHAR(200)
													   ,IN V_RUTA_ARCHIVO VARCHAR(200)
													   ,IN V_FECHA_INICIO DATE
													   ,IN V_FECHA_CADUCIDAD DATE
													   ,IN V_ROLES_ARCHIVO VARCHAR(200)
													   ,IN V_USUARIO_MODIFICACION VARCHAR(50)							   
														)
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN
	DECLARE V_CORRELATIVO_COLECCION INTEGER;
	DECLARE V_CORRELATIVO_ARCHIVO_MISMO_NOMBRE INTEGER;
	
	DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR SELECT 1 as codigoRespuesta FROM sysibm.sysdummy1;
	DECLARE C2 CURSOR WITH RETURN TO CLIENT FOR SELECT 2 as codigoRespuesta FROM sysibm.sysdummy1;

	SELECT CORRELATIVO_COLECCION INTO V_CORRELATIVO_COLECCION FROM KSK_KIOSKO.KSK_ARCHIVO WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO;
	SELECT CORRELATIVO_ARCHIVO INTO V_CORRELATIVO_ARCHIVO_MISMO_NOMBRE FROM KSK_KIOSKO.KSK_ARCHIVO WHERE ELIMINADO = 0 AND CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION AND (UPPER(TRIM(NOMBRE)) = UPPER(TRIM(V_NOMBRE))) AND (UPPER(TRIM(EXTENSION)) = UPPER(TRIM(V_EXTENSION))) AND CORRELATIVO_ARCHIVO <> V_CORRELATIVO_ARCHIVO;

	IF V_CORRELATIVO_ARCHIVO_MISMO_NOMBRE IS NOT NULL THEN
	
		OPEN C2;
	
	ELSE 

		UPDATE KSK_KIOSKO.KSK_ARCHIVO
		SET NRO_ORDEN = (SELECT NRO_ORDEN FROM KSK_KIOSKO.KSK_ARCHIVO WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO)
		WHERE ELIMINADO = 0
				AND NRO_ORDEN = V_NRO_ORDEN
				AND CORRELATIVO_COLECCION = (SELECT CORRELATIVO_COLECCION FROM KSK_KIOSKO.KSK_ARCHIVO WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO);
		
		UPDATE KSK_KIOSKO.KSK_ARCHIVO
		SET CORRELATIVO_ROL = V_CORRELATIVO_ROL,
			NOMBRE = V_NOMBRE,
			DESCRIPCION = V_DESCRIPCION,
			TAMANHO = V_TAMANHO,
			EXTENSION = V_EXTENSION,
			NRO_ORDEN = V_NRO_ORDEN,
			DESCARGABLE = V_DESCARGABLE,
			DESTACADO = V_DESTACADO,
			RUTA_IMGPREVIA=V_RUTA_IMGPREVIA,
			RUTA_ARCHIVO=V_RUTA_ARCHIVO,
			FECHA_INICIO = V_FECHA_INICIO,
			FECHA_CADUCIDAD = V_FECHA_CADUCIDAD,
			USUARIO_MODIFICACION = V_USUARIO_MODIFICACION,
			FECHA_MODIFICACION = (SELECT current timestamp FROM sysibm.sysdummy1),
			FECHA_SINCRONIZACION = (SELECT current timestamp FROM sysibm.sysdummy1)
		WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO;
		
		CALL KSK_KIOSKO.USP_REGISTRAR_ROLES_POR_ARCHIVO(V_CORRELATIVO_ARCHIVO,V_ROLES_ARCHIVO,V_USUARIO_MODIFICACION);
		
		UPDATE KSK_KIOSKO.KSK_COLECCION SET FECHA_SINCRONIZACION =  (SELECT current timestamp FROM sysibm.sysdummy1)
		WHERE CORRELATIVO_COLECCION IN (SELECT COLECCIONES.CORRELATIVO_COLECCION FROM TABLE( KSK_KIOSKO.FN_OBTENER_PADRES_ARCHIVO(V_CORRELATIVO_COLECCION)) AS COLECCIONES);
		
		OPEN C1;
	END IF;
END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ARCHIVO_UPD_POR_CORRELCOLECCION(IN V_CORRELATIVO_ARCHIVO INTEGER
																		   ,IN V_CORRELATIVO_COLECCION INTEGER												  
																		   ,IN V_USUARIO_MODIFICACION VARCHAR(50)
																		  )
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN	
	
	DECLARE V_CORRELATIVO_ARCHIVO_MISMO_NOMBRE INTEGER;	
	DECLARE V_NOMBRE_ARCHIVO_MOVER VARGRAPHIC(50);
	DECLARE V_CORRELATIVO_COLECCION_ANTERIOR INTEGER;	
	DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR SELECT 1 as codigoRespuesta FROM sysibm.sysdummy1;
	DECLARE C2 CURSOR WITH RETURN TO CLIENT FOR SELECT 2 as codigoRespuesta FROM sysibm.sysdummy1;

	SELECT NOMBRE INTO V_NOMBRE_ARCHIVO_MOVER FROM  KSK_KIOSKO.KSK_ARCHIVO WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO;
	SELECT CORRELATIVO_ARCHIVO INTO V_CORRELATIVO_ARCHIVO_MISMO_NOMBRE FROM KSK_KIOSKO.KSK_ARCHIVO WHERE ELIMINADO = 0 AND CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION AND (UPPER(TRIM(NOMBRE)) = UPPER(TRIM(V_NOMBRE_ARCHIVO_MOVER)));

	SELECT CORRELATIVO_COLECCION INTO V_CORRELATIVO_COLECCION_ANTERIOR FROM KSK_KIOSKO.KSK_ARCHIVO WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO;
	
	IF V_CORRELATIVO_ARCHIVO_MISMO_NOMBRE IS NOT NULL THEN	
		OPEN C2;	
	ELSE 	
		UPDATE KSK_KIOSKO.KSK_ARCHIVO
		SET NRO_ORDEN = NRO_ORDEN - 1
		WHERE CORRELATIVO_COLECCION = (SELECT CORRELATIVO_COLECCION FROM KSK_KIOSKO.KSK_ARCHIVO WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO)
			AND NRO_ORDEN > (SELECT NRO_ORDEN FROM KSK_KIOSKO.KSK_ARCHIVO WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO)
			AND ELIMINADO = 0;
		
		UPDATE KSK_KIOSKO.KSK_ARCHIVO 
		SET CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION,
			USUARIO_MODIFICACION = V_USUARIO_MODIFICACION,
			FECHA_MODIFICACION = (SELECT current timestamp FROM sysibm.sysdummy1),
			FECHA_SINCRONIZACION = (SELECT current timestamp FROM sysibm.sysdummy1),
			NRO_ORDEN = COALESCE((SELECT MAX(NRO_ORDEN) FROM KSK_KIOSKO.KSK_ARCHIVO WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION AND ELIMINADO = 0) , 0) + 1 
		WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO;

		UPDATE KSK_KIOSKO.KSK_COLECCION SET FECHA_SINCRONIZACION =  (SELECT current timestamp FROM sysibm.sysdummy1)
		WHERE CORRELATIVO_COLECCION IN (SELECT COLECCIONES.CORRELATIVO_COLECCION FROM TABLE( KSK_KIOSKO.FN_OBTENER_PADRES_ARCHIVO(V_CORRELATIVO_COLECCION)) AS COLECCIONES);

		UPDATE KSK_KIOSKO.KSK_COLECCION SET FECHA_SINCRONIZACION =  (SELECT current timestamp FROM sysibm.sysdummy1)
		WHERE CORRELATIVO_COLECCION IN (SELECT COLECCIONES.CORRELATIVO_COLECCION FROM TABLE( KSK_KIOSKO.FN_OBTENER_PADRES_ARCHIVO(V_CORRELATIVO_COLECCION_ANTERIOR)) AS COLECCIONES);
		
		OPEN C1;
	END IF;

	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_RUTA_SEL_POR_CORRELCOLECCION(IN V_CORRELATIVO_COLECCION INTEGER DEFAULT NULL)
 LANGUAGE SQL DYNAMIC RESULT SETS 1
 BEGIN  
  DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
   WITH RUTA_TEMPORAL (CORRELATIVO_COLECCION, CORRELATIVO_COLECCION_PADRE, NOMBRE,NIVEL) AS
           (
              SELECT RUTA.CORRELATIVO_COLECCION,RUTA.CORRELATIVO_COLECCION_PADRE,RUTA.NOMBRE,RUTA.NIVEL FROM KSK_KIOSKO.KSK_COLECCION RUTA
             WHERE RUTA.CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION
             UNION ALL
              SELECT COLECCION_HIJA.CORRELATIVO_COLECCION, COLECCION_HIJA.CORRELATIVO_COLECCION_PADRE, 
                     COLECCION_HIJA.NOMBRE,COLECCION_HIJA.NIVEL
                 FROM KSK_KIOSKO.KSK_COLECCION COLECCION_HIJA,RUTA_TEMPORAL COLECCION_PADRE
                 WHERE COLECCION_HIJA.CORRELATIVO_COLECCION = COLECCION_PADRE.CORRELATIVO_COLECCION_PADRE
           )

   SELECT 
   CORRELATIVO_COLECCION as correlativoColeccion, 
   CORRELATIVO_COLECCION_PADRE as correlativoColeccionPadre, 
   NOMBRE as nombre,
   NIVEL as nivel
   FROM RUTA_TEMPORAL ORDER BY NIVEL ASC;
  OPEN C1; 
 END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ARCHIVO_INS( IN V_CORRELATIVO_COLECCION INTEGER
													  ,IN V_CORRELATIVO_PAIS INTEGER
													  ,IN V_CORRELATIVO_ROL INTEGER
													  ,IN V_NOMBRE VARGRAPHIC(50)
													  ,IN V_DESCRIPCION VARGRAPHIC(200)
													  ,IN V_TAMANHO VARCHAR(10)
													  ,IN V_EXTENSION VARCHAR(5)
													  ,IN V_NRO_ORDEN SMALLINT
													  ,IN V_DESCARGABLE SMALLINT
													  ,IN V_DESTACADO SMALLINT
													  ,IN V_RUTA_IMGPREVIA VARCHAR(200)
													  ,IN V_RUTA_ARCHIVO VARCHAR(200)
													  ,IN V_FECHA_INICIO DATE
													  ,IN V_FECHA_CADUCIDAD DATE
													  ,IN V_ROLES_ARCHIVO VARCHAR(200)
													  ,IN V_USUARIO_REGISTRA VARCHAR(50)                  
													)
 LANGUAGE SQL DYNAMIC RESULT SETS 1
 BEGIN

 DECLARE V_CORRELATIVO_ARCHIVO INTEGER DEFAULT 0;
 DECLARE V_CORRELATIVO_ARCHIVO_MISMO_NOMBRE INTEGER;
 
 DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR SELECT 1 as codigoRespuesta FROM sysibm.sysdummy1;
 DECLARE C2 CURSOR WITH RETURN TO CLIENT FOR SELECT 2 as codigoRespuesta FROM sysibm.sysdummy1;

 SELECT CORRELATIVO_ARCHIVO INTO V_CORRELATIVO_ARCHIVO_MISMO_NOMBRE FROM KSK_KIOSKO.KSK_ARCHIVO WHERE ELIMINADO = 0 AND CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION AND (UPPER(TRIM(NOMBRE)) = UPPER(TRIM(V_NOMBRE))) AND (UPPER(TRIM(EXTENSION)) = UPPER(TRIM(V_EXTENSION)));

IF V_CORRELATIVO_ARCHIVO_MISMO_NOMBRE IS NOT NULL THEN 
  OPEN C2; 
ELSE 
  UPDATE KSK_KIOSKO.KSK_ARCHIVO
  SET NRO_ORDEN = NRO_ORDEN + 1
  WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION
   AND NRO_ORDEN >= V_NRO_ORDEN
   AND ELIMINADO = 0;
  
  SELECT CORRELATIVO_ARCHIVO INTO V_CORRELATIVO_ARCHIVO 
  FROM NEW TABLE(
  INSERT INTO KSK_KIOSKO.KSK_ARCHIVO( CORRELATIVO_COLECCION
              ,CORRELATIVO_PAIS
              ,CORRELATIVO_ROL
              ,NOMBRE
              ,DESCRIPCION
              ,TAMANHO
              ,EXTENSION
              ,NRO_ORDEN
              ,DESCARGABLE
              ,DESTACADO
              ,RUTA_IMGPREVIA
              ,RUTA_ARCHIVO
              ,FECHA_INICIO
              ,FECHA_CADUCIDAD
              ,ELIMINADO
              ,NOTIFICADO
              ,USUARIO_REGISTRA
              ,FECHA_REGISTRA
              ,FECHA_SINCRONIZACION)
  VALUES(V_CORRELATIVO_COLECCION
      ,V_CORRELATIVO_PAIS
      ,V_CORRELATIVO_ROL
      ,V_NOMBRE
      ,V_DESCRIPCION
      ,V_TAMANHO
      ,V_EXTENSION
      ,V_NRO_ORDEN
      ,V_DESCARGABLE
      ,V_DESTACADO
      ,V_RUTA_IMGPREVIA
      ,V_RUTA_ARCHIVO
      ,V_FECHA_INICIO
      ,V_FECHA_CADUCIDAD
      ,0
      ,0
      ,V_USUARIO_REGISTRA
      ,(SELECT current timestamp FROM sysibm.sysdummy1)
      ,(SELECT current timestamp FROM sysibm.sysdummy1)));
      
  CALL KSK_KIOSKO.USP_REGISTRAR_ROLES_POR_ARCHIVO(V_CORRELATIVO_ARCHIVO,V_ROLES_ARCHIVO,V_USUARIO_REGISTRA);
  
  UPDATE KSK_KIOSKO.KSK_COLECCION SET FECHA_SINCRONIZACION =  (SELECT current timestamp FROM sysibm.sysdummy1)
  WHERE CORRELATIVO_COLECCION IN (SELECT COLECCIONES.CORRELATIVO_COLECCION FROM TABLE( KSK_KIOSKO.FN_OBTENER_PADRES_ARCHIVO(V_CORRELATIVO_COLECCION)) AS COLECCIONES); 

  OPEN C1;  
 END IF;
 END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_DISPOSITIVO_ACTIVO_DEL(IN V_TOKEN VARCHAR(100))
	BEGIN
		DELETE FROM KSK_KIOSKO.KSK_DISPOSITIVO_ACTIVO WHERE TOKEN = V_TOKEN;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_SESION_WEB_DEL(IN V_TOKEN VARCHAR(100))
	BEGIN
		DELETE FROM KSK_KIOSKO.KSK_SESION_WEB WHERE TOKEN = V_TOKEN;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ROL_SEL_TODOS()
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_ROL as correlativoRol,
				   NOMBRE as nombre,
				   CODIGO_ROL as codigoRol
			FROM KSK_KIOSKO.KSK_ROL
			WHERE ROL_MOVIL = 1;
		OPEN C1;	
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ARCHIVO_DEL(IN V_CORRELATIVO_ARCHIVO INTEGER, IN V_USUARIO_MODIFICACION VARCHAR(50))
	BEGIN
	
	UPDATE KSK_KIOSKO.KSK_ARCHIVO
	SET NRO_ORDEN = NRO_ORDEN - 1
	WHERE CORRELATIVO_COLECCION = (SELECT CORRELATIVO_COLECCION FROM KSK_KIOSKO.KSK_ARCHIVO WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO)
		AND NRO_ORDEN > (SELECT NRO_ORDEN FROM KSK_KIOSKO.KSK_ARCHIVO WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO)
		AND ELIMINADO = 0;
	
	UPDATE KSK_KIOSKO.KSK_ARCHIVO
	SET ELIMINADO = 1,
		USUARIO_MODIFICACION = V_USUARIO_MODIFICACION,
		FECHA_MODIFICACION = (SELECT current timestamp FROM sysibm.sysdummy1)
	WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_PARAMETRO_SEL_NOMBRE_PARAMETRO(IN V_NOMBRE_PARAMETRO VARCHAR(50))
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_PARAMETRO as correlativoParametro,
				   NOMBRE_PARAMETRO as nombre,
				   VALOR_PARAMETRO as valor
			FROM KSK_KIOSKO.KSK_PARAMETRO
			WHERE UPPER(TRIM(NOMBRE_PARAMETRO)) = UPPER(TRIM(V_NOMBRE_PARAMETRO));
		OPEN C1;	
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_PARAMETRO_UPD(IN V_CORRELATIVO_PARAMETRO INTEGER,IN V_VALOR_PARAMETRO VARCHAR(50))
	BEGIN	
	UPDATE KSK_KIOSKO.KSK_PARAMETRO 
	SET VALOR_PARAMETRO = V_VALOR_PARAMETRO		
	WHERE CORRELATIVO_PARAMETRO = V_CORRELATIVO_PARAMETRO;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_INHABILITAR_PAISES()
	BEGIN
		UPDATE KSK_KIOSKO.KSK_PAIS SET HABILITADO = 0;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_INSERT_OR_UPDATE_PAIS(IN V_CODIGO_PAIS VARCHAR(10),IN V_NOMBRE VARCHAR(50))
	BEGIN
	MERGE INTO KSK_KIOSKO.KSK_PAIS AS P
	USING (VALUES (V_CODIGO_PAIS, V_NOMBRE)) AS PAIS_TMP (CODIGO_PAIS, NOMBRE) ON UPPER(TRIM(P.CODIGO_PAIS)) = UPPER(TRIM(PAIS_TMP.CODIGO_PAIS))
	WHEN MATCHED THEN
		UPDATE SET NOMBRE = V_NOMBRE,
					HABILITADO = 1
	WHEN NOT MATCHED THEN	
		INSERT (NOMBRE, CODIGO_PAIS,HABILITADO) VALUES (PAIS_TMP.NOMBRE, TRIM(PAIS_TMP.CODIGO_PAIS),1)	
	ELSE IGNORE;	
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_SESION_WEB_SEL_POR_TOKEN(IN V_TOKEN VARCHAR(100))
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR
			SELECT SW.CORRELATIVO_SESION_WEB as correlativoSesionWeb,
				   SW.CORRELATIVO_PAIS as correlativoPais,
				   SW.CORRELATIVO_PAIS as correlativoPais,
				   (SELECT P.CODIGO_PAIS FROM KSK_KIOSKO.KSK_PAIS P WHERE P.CORRELATIVO_PAIS = SW.CORRELATIVO_PAIS) AS pais,				   
				   SW.USUARIO as nombreUsuario,
				   SW.CLAVE as clave,
				   SW.TOKEN as token ,
				   SW.FECHA_REGISTRO fechaRegistro,
				   SW.CORRELATIVO_ROL as correlativoRol				   
			FROM KSK_KIOSKO.KSK_SESION_WEB SW
			WHERE TOKEN = V_TOKEN;
		OPEN C1;
	END;
/	

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_DISPOSITIVO_ACTIVO_SEL_POR_TOKEN(IN V_TOKEN VARCHAR(100))
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_DISPOSITIVO_ACTIVO as correlativoDispositivoActivo,
				   CORRELATIVO_PAIS as correlativoPais,
				   USUARIO as nombreUsuario,
				   CLAVE as clave,
				   NOTIFICACION_IDENTIFICADOR as notificacionIdentificador,
				   DISPOSITIVO_SIS as dispositivoSis,
				   DISPOSITIVO_IDENTIFICADOR as dispositivoIdentificador,
				   TOKEN as token
			FROM KSK_KIOSKO.KSK_DISPOSITIVO_ACTIVO
			WHERE TOKEN = V_TOKEN;
		OPEN C1;	
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_DISPOSITIVO_ACTIVO_SEL_POR_PAIS(IN V_CORRELATIVO_PAIS INTEGER
																		  ,IN V_DIASINACTIVIDAD INTEGER
																		   )
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR
			SELECT CORRELATIVO_DISPOSITIVO_ACTIVO as correlativoDispositivoActivo,
				   CORRELATIVO_PAIS as correlativoPais,
				   USUARIO as nombreUsuario,
				   CLAVE as clave,
				   NOTIFICACION_IDENTIFICADOR as notificacionIdentificador,
				   DISPOSITIVO_SIS as dispositivoSis,
				   DISPOSITIVO_IDENTIFICADOR as dispositivoIdentificador,
				   TOKEN as token,
				   FECHA_REGISTRO as fechaRegistro,
				   FECHA_ULTIMA_SINC as fechaUltimaSinc
			FROM KSK_KIOSKO.KSK_DISPOSITIVO_ACTIVO
			WHERE CORRELATIVO_PAIS = V_CORRELATIVO_PAIS
				  AND(DAYS(FECHA_ULTIMA_SINC) >= DAYS(CURRENT_DATE)- V_DIASINACTIVIDAD)
				  AND (NOTIFICACION_IDENTIFICADOR IS NOT NULL OR NOTIFICACION_IDENTIFICADOR <> '');
		OPEN C1;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ARCHIVO_NOTIFICADO_UPD(IN V_CORRELATIVO_PAIS INTEGER)
	BEGIN	
	UPDATE KSK_KIOSKO.KSK_ARCHIVO 
	SET NOTIFICADO = 1
	WHERE NOTIFICADO = 0 
		  AND CORRELATIVO_PAIS = V_CORRELATIVO_PAIS
		  AND (FECHA_INICIO <= (SELECT current date FROM sysibm.sysdummy1) AND (FECHA_CADUCIDAD IS NULL OR ((SELECT current timestamp FROM sysibm.sysdummy1) <= FECHA_CADUCIDAD )))
		  AND ELIMINADO = 0;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_INS_OR_UPD_DISPOSITIVO_POR_DISP_ID(IN V_PAIS 				VARCHAR(10),
																			  IN V_USUARIO              VARCHAR(50),
																			  IN V_CLAVE                VARCHAR(50),
																			  IN V_NOTIFICACION_IDENTIFICADOR VARCHAR(300),
																			  IN V_DISPOSITIVO_SIS      VARCHAR(300),
																			  IN V_DISPOSITIVO_IDENTIFICADOR VARCHAR(300),
																			  IN V_TOKEN                VARCHAR(300),																			 
																			  IN V_FECHA_ULTIMA_SINC    DATE
																			 )
	BEGIN
	MERGE INTO KSK_KIOSKO.KSK_DISPOSITIVO_ACTIVO AS DISPOSITIVO
	USING (
		   VALUES (KSK_KIOSKO.FN_OBTENER_CORRELATIVO_PAIS(V_PAIS),
				   V_USUARIO,
				   V_CLAVE,
				   V_NOTIFICACION_IDENTIFICADOR,
				   V_DISPOSITIVO_SIS,
				   V_DISPOSITIVO_IDENTIFICADOR,
				   V_TOKEN,
				   (SELECT current timestamp FROM sysibm.sysdummy1),
				   (SELECT current timestamp FROM sysibm.sysdummy1)) 
		  ) AS DISPOSITIVO_ACTIVO_TMP ( CORRELATIVO_PAIS,
										USUARIO,
										CLAVE,
										NOTIFICACION_IDENTIFICADOR,
										DISPOSITIVO_SIS,
										DISPOSITIVO_IDENTIFICADOR,
										TOKEN,
										FECHA_REGISTRO,
										FECHA_ULTIMA_SINC
									   ) ON UPPER(TRIM(DISPOSITIVO.DISPOSITIVO_IDENTIFICADOR)) = UPPER(TRIM(DISPOSITIVO_ACTIVO_TMP.DISPOSITIVO_IDENTIFICADOR))
	WHEN MATCHED THEN
		UPDATE SET CORRELATIVO_PAIS = KSK_KIOSKO.FN_OBTENER_CORRELATIVO_PAIS(V_PAIS),
				   USUARIO = V_USUARIO,
				   CLAVE = V_CLAVE,
				   NOTIFICACION_IDENTIFICADOR = V_NOTIFICACION_IDENTIFICADOR,
				   DISPOSITIVO_SIS = V_DISPOSITIVO_SIS,
				   DISPOSITIVO_IDENTIFICADOR = V_DISPOSITIVO_IDENTIFICADOR,
				   TOKEN = V_TOKEN,
				   FECHA_REGISTRO = (SELECT current timestamp FROM sysibm.sysdummy1),
				   FECHA_ULTIMA_SINC = (SELECT current timestamp FROM sysibm.sysdummy1)
	WHEN NOT MATCHED THEN
		INSERT (CORRELATIVO_PAIS,
				USUARIO,
				CLAVE,
				NOTIFICACION_IDENTIFICADOR,
				DISPOSITIVO_SIS,
				DISPOSITIVO_IDENTIFICADOR,
				TOKEN,
				FECHA_REGISTRO,
				FECHA_ULTIMA_SINC)
		VALUES(DISPOSITIVO_ACTIVO_TMP.CORRELATIVO_PAIS,
			   DISPOSITIVO_ACTIVO_TMP.USUARIO,
			   DISPOSITIVO_ACTIVO_TMP.CLAVE,
			   DISPOSITIVO_ACTIVO_TMP.NOTIFICACION_IDENTIFICADOR,
			   DISPOSITIVO_ACTIVO_TMP.DISPOSITIVO_SIS,
			   DISPOSITIVO_ACTIVO_TMP.DISPOSITIVO_IDENTIFICADOR,
			   DISPOSITIVO_ACTIVO_TMP.TOKEN,
			   DISPOSITIVO_ACTIVO_TMP.FECHA_REGISTRO,
			   DISPOSITIVO_ACTIVO_TMP.FECHA_ULTIMA_SINC
			  )
	ELSE IGNORE;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ELIMINAR_SESION_WEB_SI_ES_EXPIRADA(IN V_TOKEN VARCHAR(100))
	BEGIN
	DELETE FROM KSK_KIOSKO.KSK_SESION_WEB WHERE TOKEN = V_TOKEN
	AND (FECHA_REGISTRO + CAST((SELECT VALOR_PARAMETRO FROM KSK_KIOSKO.KSK_PARAMETRO WHERE NOMBRE_PARAMETRO = 'HorasExpiracionToken') AS INTEGER) HOURS <= (SELECT current timestamp FROM sysibm.sysdummy1));
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_OBTENER_POR_NOTIFICAR (IN correlativoPais INTEGER)
LANGUAGE SQL DYNAMIC RESULT SETS 1
BEGIN
	DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR
		select count(1) as cantidadNotificar
		from KSK_KIOSKO.KSK_ARCHIVO
		where 
			(FECHA_INICIO <= (SELECT current date FROM sysibm.sysdummy1) AND (FECHA_CADUCIDAD IS NULL OR ((SELECT current timestamp FROM sysibm.sysdummy1) <= FECHA_CADUCIDAD )))
			AND (notificado IS NULL OR notificado = 0)
			AND eliminado = 0
			AND correlativo_pais = correlativoPais;
	OPEN C1;
END;
/

CREATE OR REPLACE FUNCTION KSK_KIOSKO.FN_OBTENER_CODIGO_PAIS(IN V_CORRELATIVO_PAIS INTEGER)
 RETURNS VARCHAR(10)
 LANGUAGE SQL
  BEGIN 
   DECLARE R_PAIS VARCHAR(10);  
   SELECT CODIGO_PAIS INTO R_PAIS FROM KSK_KIOSKO.KSK_PAIS WHERE CORRELATIVO_PAIS = V_CORRELATIVO_PAIS;
   RETURN R_PAIS; 
  END;  
/

 CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ROL_SEL_POR_CODIGO(IN V_CODIGO_ROL VARCHAR(10))
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR
			SELECT CORRELATIVO_ROL as correlativoRol,
					NOMBRE as nombre,
					CODIGO_ROL as codigoRol
			FROM KSK_KIOSKO.KSK_ROL
			WHERE codigo_rol = V_CODIGO_ROL AND ROL_MOVIL = 0;
		OPEN C1;
	END 
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_FORMATO_ARCHIVO_POR_PAIS(IN V_CORRELATIVO_PAIS INTEGER DEFAULT NULL)
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_FORMATO_ARCHIVO as correlativoFormatoArchivo,
				   CORRELATIVO_ROL as correlativoRol, 
				   EXTENSION as extension,
				   DESCRIPCION as descripcion,
				   DESCARGA as descarga,
				   CARGA as carga				   			   
			FROM KSK_KIOSKO.KSK_FORMATO_ARCHIVO
			WHERE CORRELATIVO_PAIS = V_CORRELATIVO_PAIS ;
		OPEN C1;	
	END;
/

CREATE OR REPLACE FUNCTION KSK_KIOSKO.FN_SEL_ROL (IN V_CORRELATIVO INT,
													IN V_TABLA            INT)
	RETURNS INTEGER
	
	LANGUAGE SQL
	BEGIN
	
		DECLARE R_CORRELATIVO_ROL INTEGER;
		IF ( V_TABLA = 1 )
			THEN 
				SELECT CORRELATIVO_ROL INTO R_CORRELATIVO_ROL FROM KSK_KIOSKO.KSK_ARCHIVO WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO;
		ELSE 
			IF ( V_TABLA = 2 )
				THEN
					SELECT CORRELATIVO_ROL INTO R_CORRELATIVO_ROL FROM KSK_KIOSKO.KSK_COLECCION WHERE CORRELATIVO_COLECCION = V_CORRELATIVO;
			ELSE 
				IF ( V_TABLA = 3)
					THEN 
						SELECT CORRELATIVO_ROL INTO R_CORRELATIVO_ROL FROM KSK_KIOSKO.KSK_FORMATO_ARCHIVO WHERE CORRELATIVO_FORMATO_ARCHIVO = V_CORRELATIVO;
				END IF;
			END IF;
		END IF;
		RETURN R_CORRELATIVO_ROL;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_REGISTRAR_ROLES_POR_ARCHIVO(IN V_CORRELATIVO_ARCHIVO INTEGER DEFAULT NULL
																	  ,IN V_CORRELATIVO_ROL VARCHAR(200)
																	  ,IN V_USUARIO_REGISTRA VARCHAR(150))												   
 BEGIN 
	DELETE FROM KSK_KIOSKO.KSK_ARCHIVO_ROL WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO;
	
	INSERT INTO KSK_KIOSKO.KSK_ARCHIVO_ROL(CORRELATIVO_ARCHIVO,CORRELATIVO_ROL,USUARIO_REGISTRA,FECHA_REGISTRA)
	WITH ARRAY_ROL AS
		(
		SELECT  CAST(V_CORRELATIVO_ARCHIVO AS INTEGER) AS ARCHIVO,
				CAST(V_CORRELATIVO_ROL AS VARCHAR(200)) AS ROLES,
			    ',' AS SPLIT
		FROM sysibm.sysdummy1
		),
	RESULTADO
	   (
		ARCHIVO,	
		ROLES,
		SPLIT,
		ROW_NUM,
		COLUMN_VALUE,
		POS
	   )AS
	   (
		SELECT
				ARCHIVO,				
				ROLES,
				SPLIT,
				1,
				VARCHAR(SUBSTR(ROLES,1,DECODE(INSTR(ROLES,SPLIT,1),0,LENGTH(ROLES), INSTR(ROLES,SPLIT,1)-1)),255),INSTR(ROLES,SPLIT,1) + LENGTH(SPLIT)
		FROM ARRAY_ROL
		UNION ALL
		SELECT
				ARCHIVO,				
				ROLES,
				SPLIT,
				ROW_NUM + 1,
				VARCHAR(SUBSTR(ROLES,POS,DECODE(INSTR(ROLES,SPLIT,POS),0,LENGTH(ROLES) - POS + 1,INSTR(ROLES,SPLIT,POS)-POS)),255),INSTR(ROLES,SPLIT,POS) + LENGTH(SPLIT)
		FROM RESULTADO
		WHERE POS > LENGTH(SPLIT)
	   )
	SELECT ARCHIVO,CAST(COLUMN_VALUE AS INTEGER),V_USUARIO_REGISTRA,(SELECT current timestamp FROM sysibm.sysdummy1) FROM RESULTADO;
END;
/
CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_PUSH_ENVIO_INS(IN V_MENSAJE              VARCHAR(200)
														 ,IN V_FECHA_HORA_INICIO    DATE
														 ,IN V_FECHA_HORA_FIN       DATE
														 ,IN V_EXITOSOS             INTEGER
														 ,IN V_ERRORES              INTEGER
														 ,IN V_MOTIVO_ERROR         VARCHAR(200)
														 ,IN V_PLATAFORMA           VARCHAR(200)
														 ,IN V_PAIS                 VARCHAR(200)
														)
	BEGIN
	INSERT INTO KSK_KIOSKO.KSK_PUSH_ENVIO(MENSAJE
										 ,FECHA_HORA_INICIO
										 ,FECHA_HORA_FIN
										 ,EXITOSOS
										 ,ERRORES
										 ,MOTIVO_ERROR
										 ,PLATAFORMA
										 ,PAIS)
    VALUES(V_MENSAJE
		   ,V_FECHA_HORA_INICIO
		   ,V_FECHA_HORA_FIN
		   ,V_EXITOSOS
		   ,V_ERRORES
		   ,V_MOTIVO_ERROR
		   ,V_PLATAFORMA
		   ,V_PAIS);
	END;
/



CREATE OR REPLACE FUNCTION KSK_KIOSKO.FN_OBTENER_CORRELATIVOS_ARCHIVOS(V_CORRELATIVOS_ARCHIVOS VARCHAR(200))
RETURNS TABLE (CORRELATIVO_ARCHIVO INTEGER)
READS SQL DATA
NO EXTERNAL ACTION NOT DETERMINISTIC
RETURN
	WITH ARRAY_ARCHIVO AS
		(
		SELECT  CAST(V_CORRELATIVOS_ARCHIVOS AS VARCHAR(200)) AS ARCHIVOS,
			    ',' AS SPLIT
		FROM sysibm.sysdummy1
		),
	RESULTADO
	   (		
		ARCHIVOS,
		SPLIT,
		ROW_NUM,
		COLUMN_VALUE,
		POS
	   )AS
	   (
		SELECT								
				ARCHIVOS,
				SPLIT,
				1,
				VARCHAR(SUBSTR(ARCHIVOS,1,DECODE(INSTR(ARCHIVOS,SPLIT,1),0,LENGTH(ARCHIVOS), INSTR(ARCHIVOS,SPLIT,1)-1)),255),INSTR(ARCHIVOS,SPLIT,1) + LENGTH(SPLIT)
		FROM ARRAY_ARCHIVO
		UNION ALL
		SELECT								
				ARCHIVOS,
				SPLIT,
				ROW_NUM + 1,
				VARCHAR(SUBSTR(ARCHIVOS,POS,DECODE(INSTR(ARCHIVOS,SPLIT,POS),0,LENGTH(ARCHIVOS) - POS + 1,INSTR(ARCHIVOS,SPLIT,POS)-POS)),255),INSTR(ARCHIVOS,SPLIT,POS) + LENGTH(SPLIT)
		FROM RESULTADO
		WHERE POS > LENGTH(SPLIT)
	   )
	SELECT CAST(COLUMN_VALUE AS INTEGER) FROM RESULTADO;	
/


CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ARCHIVOS_ROL_LISTA (IN V_CORRELATIVOS_ARCHIVO VARCHAR(1000))
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN	
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 			
			SELECT CORRELATIVO_ARCHIVO AS correlativoArchivo, 
				NOMBRE AS nombre, 
				CORRELATIVO_ROL AS correlativoRol
			FROM KSK_KIOSKO.KSK_ARCHIVO 
			WHERE CORRELATIVO_ARCHIVO IN (SELECT ARCHIVOS.CORRELATIVO_ARCHIVO FROM TABLE (KSK_KIOSKO.FN_OBTENER_CORRELATIVOS_ARCHIVOS(V_CORRELATIVOS_ARCHIVO)) AS ARCHIVOS)
			AND ELIMINADO = 0;
		OPEN C1;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ARCHIVO_DEL_MULTIPLE_ORDENAMIENTO(IN V_CORRELATIVO_COLECCION INTEGER,IN V_CORRELATIVOS_ARCHIVO VARCHAR(1000))
BEGIN
	DECLARE V_NRO_ORDEN INTEGER DEFAULT 1;
	DECLARE V_CORRELATIVO_ARCHIVO INTEGER;

	FOR CA AS CUR_ARCHIVO CURSOR
		FOR
			SELECT CORRELATIVO_ARCHIVO 
			FROM KSK_KIOSKO.KSK_ARCHIVO 
			WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION
				  AND ELIMINADO = 0
				  AND CORRELATIVO_ARCHIVO NOT IN (SELECT ARCHIVOS.CORRELATIVO_ARCHIVO 
												  FROM TABLE (KSK_KIOSKO.FN_OBTENER_CORRELATIVOS_ARCHIVOS(V_CORRELATIVOS_ARCHIVO)) AS ARCHIVOS)
			ORDER BY NRO_ORDEN ASC
			
	DO		
		UPDATE KSK_KIOSKO.KSK_ARCHIVO
		SET NRO_ORDEN = V_NRO_ORDEN
		WHERE CORRELATIVO_ARCHIVO = CA.CORRELATIVO_ARCHIVO;		
		SET V_NRO_ORDEN = (V_NRO_ORDEN + 1);
	END FOR;
 END;
/
CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ARCHIVO_DEL_MULTIPLE(IN V_CORRELATIVOS_ARCHIVO VARCHAR(1000), IN V_USUARIO_MODIFICACION VARCHAR(50))
BEGIN		
	DECLARE EOF_COL INT DEFAULT 0;
	DECLARE EOF_ARCHIVO INT DEFAULT 0;	
	
	FOR CO AS CUR_COLECCION CURSOR
		FOR
			SELECT DISTINCT ARC.CORRELATIVO_COLECCION
			FROM KSK_KIOSKO.KSK_ARCHIVO ARC
			WHERE ARC.CORRELATIVO_ARCHIVO IN(SELECT ARCHIVOS.CORRELATIVO_ARCHIVO 
											 FROM TABLE (KSK_KIOSKO.FN_OBTENER_CORRELATIVOS_ARCHIVOS(V_CORRELATIVOS_ARCHIVO)) AS ARCHIVOS)
	
	DO		
		CALL KSK_KIOSKO.USP_ARCHIVO_DEL_MULTIPLE_ORDENAMIENTO(CO.CORRELATIVO_COLECCION,V_CORRELATIVOS_ARCHIVO);		
		UPDATE KSK_KIOSKO.KSK_COLECCION SET FECHA_SINCRONIZACION =  (SELECT current timestamp FROM sysibm.sysdummy1)
		WHERE CORRELATIVO_COLECCION IN (SELECT COLECCIONES.CORRELATIVO_COLECCION FROM TABLE( KSK_KIOSKO.FN_OBTENER_PADRES_ARCHIVO(CO.CORRELATIVO_COLECCION)) AS COLECCIONES);		
	END FOR;
	
	-- ELIMINA LOS ARCHIVOS LOGICAMENTE
	UPDATE KSK_KIOSKO.KSK_ARCHIVO
	SET ELIMINADO = 1,
		USUARIO_MODIFICACION = V_USUARIO_MODIFICACION,
		FECHA_MODIFICACION = (SELECT current timestamp FROM sysibm.sysdummy1),
		FECHA_SINCRONIZACION = (SELECT current timestamp FROM sysibm.sysdummy1)
	WHERE CORRELATIVO_ARCHIVO  IN (SELECT ARCHIVOS.CORRELATIVO_ARCHIVO FROM TABLE (KSK_KIOSKO.FN_OBTENER_CORRELATIVOS_ARCHIVOS(V_CORRELATIVOS_ARCHIVO)) AS ARCHIVOS);
 END;
 /
 
CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_GENERAR_FORMATO_ARCHIVO_PAISES
BEGIN
	FOR CA AS CUR_PAIS CURSOR
		FOR
			SELECT P.CORRELATIVO_PAIS 
			FROM KSK_KIOSKO.KSK_PAIS P
			WHERE P.CORRELATIVO_PAIS NOT IN (SELECT F.CORRELATIVO_PAIS  
											FROM KSK_KIOSKO.KSK_FORMATO_ARCHIVO F)
	DO		
		CALL KSK_KIOSKO.USP_GENERAR_FORMATO_ARCHIVO_POR_PAIS(CA.CORRELATIVO_PAIS);
	END FOR;
 END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_VALIDAR_ARCHIVO_ROL(IN V_CORRELATIVO_ARCHIVO INTEGER, IN V_CODIGO_ROL VARCHAR(10))
LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN
		DECLARE CORR_ARCHIVO INTEGER DEFAULT NULL;
		DECLARE CORR_ROL_MOVIL INTEGER DEFAULT NULL;

		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR SELECT 0 as codigoRespuesta FROM sysibm.sysdummy1;
		DECLARE C2 CURSOR WITH RETURN TO CLIENT FOR SELECT 1 as codigoRespuesta FROM sysibm.sysdummy1;

		SELECT KSK_KIOSKO.FN_OBTENER_CORRELATIVO_ROL_MOVIL(V_CODIGO_ROL) INTO CORR_ROL_MOVIL FROM sysibm.sysdummy1;

		IF CORR_ROL_MOVIL IS NOT NULL THEN
		
			SELECT ARCHIVO.CORRELATIVO_ARCHIVO INTO CORR_ARCHIVO 
			FROM KSK_KIOSKO.KSK_ARCHIVO_ROL ARCHIVOROL
			INNER JOIN KSK_KIOSKO.KSK_ARCHIVO ARCHIVO 
			ON ARCHIVO.CORRELATIVO_ARCHIVO = ARCHIVOROL.CORRELATIVO_ARCHIVO
			WHERE ARCHIVO.CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO 
			AND ARCHIVOROL.CORRELATIVO_ROL = CORR_ROL_MOVIL
			AND ((SELECT current date FROM sysibm.sysdummy1) >= ARCHIVO.FECHA_INICIO
			AND (SELECT current date FROM sysibm.sysdummy1) <= (CASE WHEN ARCHIVO.FECHA_CADUCIDAD IS NULL THEN (current DATE + 500 YEARS) ELSE ARCHIVO.FECHA_CADUCIDAD END))
			AND ARCHIVO.ELIMINADO = 0;

			IF CORR_ARCHIVO IS NOT NULL THEN
				OPEN C2;
			ELSE 			
				OPEN C1;
			END IF;

		ELSE
			OPEN C1;

		END IF;

	END;
/
/
