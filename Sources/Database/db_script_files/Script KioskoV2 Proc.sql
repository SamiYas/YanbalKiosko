CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_PAIS_SEL_TODOS()
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_PAIS as correlativoPais,
				   NOMBRE as nombre,
				   CODIGO_PAIS as codigoPais
			FROM KSK_KIOSKO.KSK_PAIS;
		OPEN C1;	
	END;
/
CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_PAIS_SEL_PK(IN V_CORRELATIVO_PAIS INTEGER DEFAULT NULL)
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_PAIS as correlativoPais,
				   NOMBRE as nombre,
				   CODIGO_PAIS as codigoPais
			FROM KSK_KIOSKO.KSK_PAIS
			WHERE CORRELATIVO_PAIS = V_CORRELATIVO_PAIS;
		OPEN C1;	
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_FORMATO_ARCHIVO_SEL_TODOS()
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_FORMATO_ARCHIVO as correlativoFormatoArchivo,
				   EXTENSION as extension,
				   DESCRIPCION as descripcion,
				   DESCARGA as descarga,
				   CARGA as carga				   			   
			FROM KSK_KIOSKO.KSK_FORMATO_ARCHIVO;
		OPEN C1;	
	END;
/
	
CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_FORMATO_ARCHIVO_SEL_PK(IN V_CORRELATIVO_FORMATO_ARCHIVO INTEGER DEFAULT NULL)
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_FORMATO_ARCHIVO as correlativoFormatoArchivo,
				   EXTENSION as extension,
				   DESCRIPCION as descripcion,
				   DESCARGA as descarga,
				   CARGA as carga				   			   
			FROM KSK_KIOSKO.KSK_FORMATO_ARCHIVO
			WHERE CORRELATIVO_FORMATO_ARCHIVO = V_CORRELATIVO_FORMATO_ARCHIVO;
		OPEN C1;	
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_COLECCIONARCHIVO_POR_PAISROLFECSINC(IN V_CORRELATIVO_PAIS INTEGER DEFAULT NULL,
																			   IN V_CORRELATIVO_ROL INTEGER DEFAULT NULL,
																		       IN V_FECHA_SINCRONIZACION DATE DEFAULT NULL
																				)
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR
			SELECT 	1 as tipo,
					CORRELATIVO_COLECCION  as correlativo,
					CORRELATIVO_COLECCION_PADRE as correlativoColeccion,
					CORRELATIVO_PAIS as correlativoPais,
					CORRELATIVO_ROL as correlativoRol,     
					NOMBRE as nombre,             
					NIVEL as nivel,
					NRO_ORDEN as nroOrden,        
					DESCRIPCION as descripcion,        
					COLOR as color,
					NULL as tamanho,
					NULL as extension,					
					NULL as descargable,
					NULL as destacado,
					NULL as rutaImgprevia,
					NULL as rutaArchivo,
					NULL as fechaInicio,
					NULL as fechaCaducidad,					
					(SELECT current timestamp FROM sysibm.sysdummy1) as fechaSincronizacion,
					NULL as eliminado,
					NULL as notificado					
			FROM KSK_KIOSKO.KSK_COLECCION
			WHERE CORRELATIVO_PAIS = V_CORRELATIVO_PAIS 				  
				  AND FECHA_SINCRONIZACION >= V_FECHA_SINCRONIZACION
			UNION ALL
			SELECT  2 as tipo,
					ARCH.CORRELATIVO_ARCHIVO as correlativo,
					ARCH.CORRELATIVO_COLECCION as correlativoColeccion,
					ARCH.CORRELATIVO_PAIS as correlativoPais,
					ARCH.CORRELATIVO_ROL as correlativoRol,
					ARCH.NOMBRE as nombre,
					NULL AS nivel,
					ARCH.NRO_ORDEN as nroOrden,
					ARCH.DESCRIPCION as descripcion,
					NULL AS color,
					ARCH.TAMANHO as tamanho,
					ARCH.EXTENSION as extension,					
					ARCH.DESCARGABLE as descargable,
					ARCH.DESTACADO as destacado,
					ARCH.RUTA_IMGPREVIA as rutaImgprevia,
					ARCH.RUTA_ARCHIVO as rutaArchivo,
					ARCH.FECHA_INICIO as fechaInicio,
					ARCH.FECHA_CADUCIDAD as fechaCaducidad,
					(SELECT current timestamp FROM sysibm.sysdummy1) as fechaSincronizacion,
					ARCH.ELIMINADO as eliminado,
					ARCH.NOTIFICADO as notificado
			FROM KSK_KIOSKO.KSK_ARCHIVO ARCH
				 --INNER JOIN  KSK_KIOSKO.KSK_ARCHIVO_ROL AR ON (ARCH.CORRELATIVO_ARCHIVO = AR.CORRELATIVO_ARCHIVO)
			WHERE ARCH.CORRELATIVO_PAIS = V_CORRELATIVO_PAIS
				  --AND (FECHA_INICIO >= (SELECT current timestamp FROM sysibm.sysdummy1) AND FECHA_CADUCIDAD <= (SELECT current timestamp FROM sysibm.sysdummy1));			 
				  AND ARCH.FECHA_SINCRONIZACION >= V_FECHA_SINCRONIZACION;
				  --AND AR.CORRELATIVO_ROL IN (V_CORRELATIVO_ROL);
		OPEN C1;		
	END;	
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_FORMATO_ARCHIVO_UPD(IN V_CORRELATIVO_FORMATO_ARCHIVO INTEGER
															   ,IN V_EXTENSION VARCHAR(5)
															   ,IN V_DESCRIPCION VARCHAR(100)
															   ,IN V_DESCARGA NUMERIC(9,2)
															   ,IN V_CARGA NUMERIC(9,2)													  
															   ,IN V_USUARIO_MODIFICACION VARCHAR(50)														  
															  )
	BEGIN	
	UPDATE KSK_KIOSKO.KSK_FORMATO_ARCHIVO 
	SET EXTENSION = V_EXTENSION,
		DESCRIPCION = V_DESCRIPCION,
		DESCARGA = V_DESCARGA,
		CARGA = V_CARGA,
		USUARIO_MODIFICACION = V_USUARIO_MODIFICACION,
		FECHA_MODIFICACION = (SELECT current timestamp FROM sysibm.sysdummy1)
	WHERE CORRELATIVO_FORMATO_ARCHIVO = V_CORRELATIVO_FORMATO_ARCHIVO;
	END;
/



CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_BITACORA_INS(IN V_DESCRIPCION VARCHAR(150)
														,IN V_ACCION VARCHAR(150)
														,IN V_NOMBRE_ARCHIVO VARCHAR(150)
														,IN V_TAMANHO_ARCHIVO VARCHAR(150)
														,IN V_TIPO_ARCHIVO VARCHAR(150)
														,IN V_TIPO_DESCARGA VARCHAR(150)
														,IN V_USUARIO VARCHAR(150)
														,IN V_PLATAFORMA VARCHAR(150)
														,IN V_DISPOSITIVO_IDENTIFICADOR VARCHAR(150)
														,IN V_FECHA_BITACORA TIMESTAMP
														)
	BEGIN	
	INSERT INTO KSK_KIOSKO.KSK_BITACORA( DESCRIPCION
										,ACCION
										,NOMBRE_ARCHIVO
										,TAMANHO_ARCHIVO
										,TIPO_ARCHIVO
										,TIPO_DESCARGA
										,USUARIO
										,PLATAFORMA
										,DISPOSITIVO_IDENTIFICADOR
										,FECHA_BITACORA)
    VALUES(V_DESCRIPCION
		   ,V_ACCION
		   ,V_NOMBRE_ARCHIVO
		   ,V_TAMANHO_ARCHIVO
		   ,V_TIPO_ARCHIVO
		   ,V_TIPO_DESCARGA
		   ,V_USUARIO
		   ,V_PLATAFORMA
		   ,V_DISPOSITIVO_IDENTIFICADOR
		   ,V_FECHA_BITACORA);
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_SESION_WEB_INS(IN V_CORRELATIVO_PAIS INTEGER,
														  IN V_USUARIO VARCHAR(50),
														  IN V_CLAVE VARCHAR(50),
														  IN V_TOKEN VARCHAR(100)														  
														)
	BEGIN


		INSERT INTO KSK_KIOSKO.KSK_SESION_WEB(CORRELATIVO_PAIS
											  ,USUARIO
											  ,CLAVE
											  ,TOKEN       	
											  ,FECHA_REGISTRO)
		VALUES(V_CORRELATIVO_PAIS
			   ,V_USUARIO
			   ,V_CLAVE
			   ,V_TOKEN
			   ,(SELECT current timestamp FROM sysibm.sysdummy1));	
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ELIMINAR_SESIONES_EXPIRADAS_POR_USR(IN V_USUARIO VARCHAR(50))
	BEGIN	
		DECLARE V_VALOR_PARAMETRO VARCHAR(50) DEFAULT '0';
		
		SELECT VALOR_PARAMETRO INTO V_VALOR_PARAMETRO 
		FROM KSK_KIOSKO.KSK_PARAMETRO 
		WHERE UPPER(TRIM(NOMBRE_PARAMETRO)) = UPPER(TRIM('HorasExpiracionToken'));
		
		DELETE FROM KSK_KIOSKO.KSK_SESION_WEB
		WHERE UPPER(TRIM(USUARIO)) = UPPER(TRIM(V_USUARIO))
			  AND ((SELECT current timestamp FROM sysibm.sysdummy1) > (TIMESTAMP(FECHA_REGISTRO) + CAST(V_VALOR_PARAMETRO AS INTEGER) HOURS));	
	END;
/														

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_FORMATO_ARCHIVO_EXT_DESC_SEL_TODOS()
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT EXTENSION as extension,
				   DESCARGA as descarga
			FROM KSK_KIOSKO.KSK_FORMATO_ARCHIVO;
		OPEN C1;	
	END;
/


CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_COLECCION_SEL_POR_COLECCIONPADRE(IN V_CORRELATIVO_COLECCION_PADRE INTEGER)
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT COL.CORRELATIVO_COLECCION as correlativoColeccion,
				   COL.CORRELATIVO_COLECCION_PADRE as correlativoColeccionPadre,
				   COL.NOMBRE as nombre,
				   COL.NIVEL as nivel,
				   COL.NRO_ORDEN as nroOrden,
				   COL.DESCRIPCION as descripcion,
				   (SELECT COUNT(*) FROM KSK_COLECCION COL_HIJA WHERE COL_HIJA.CORRELATIVO_COLECCION_PADRE = COL.CORRELATIVO_COLECCION AND COL_HIJA.ELIMINADO = 0) as cantidadColeccionesHijas				   
			FROM KSK_KIOSKO.KSK_COLECCION COL
			WHERE COL.CORRELATIVO_COLECCION_PADRE = V_CORRELATIVO_COLECCION_PADRE
			AND COL.ELIMINADO = 0
			ORDER BY COL.NIVEL;
			
		DECLARE C2 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT COL.CORRELATIVO_COLECCION as correlativoColeccion,
				   COL.CORRELATIVO_COLECCION_PADRE as correlativoColeccionPadre,
				   COL.NOMBRE as nombre,
				   COL.NIVEL as nivel,
				   COL.NRO_ORDEN as nroOrden,
				   COL.DESCRIPCION as descripcion,
				   (SELECT COUNT(*) FROM KSK_COLECCION COL_HIJA WHERE COL_HIJA.CORRELATIVO_COLECCION_PADRE = COL.CORRELATIVO_COLECCION AND COL_HIJA.ELIMINADO = 0) as cantidadColeccionesHijas
			FROM KSK_KIOSKO.KSK_COLECCION COL
			WHERE COL.CORRELATIVO_COLECCION_PADRE IS NULL
			AND COL.ELIMINADO = 0
			ORDER BY COL.NIVEL;
		
		IF V_CORRELATIVO_COLECCION_PADRE IS NULL THEN
			OPEN C2;	
		ELSE
			OPEN C1;
		END IF;

	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_COLECCION_INS(IN V_CORRELATIVO_COLECCION_PADRE INTEGER
														,IN V_NOMBRE VARCHAR(50)
														,IN V_NIVEL SMALLINT
														,IN V_NRO_ORDEN SMALLINT
														,IN V_DESCRIPCION VARCHAR(100)
														,IN V_COLOR VARCHAR(20)
														,IN V_USUARIO_REGISTRA VARCHAR(50)
)
	BEGIN
		update KSK_KIOSKO.KSK_COLECCION
		set nro_orden = nro_orden + 1
		where CORRELATIVO_COLECCION_PADRE = V_CORRELATIVO_COLECCION_PADRE
			and nro_orden >= V_NRO_ORDEN
			and eliminado = 0;

	INSERT INTO KSK_KIOSKO.KSK_COLECCION( CORRELATIVO_COLECCION_PADRE
										,NOMBRE
										,NIVEL
										,NRO_ORDEN
										,DESCRIPCION
										,COLOR
										,FECHA_REGISTRA
										,USUARIO_REGISTRA,
										ELIMINADO)
	VALUES(V_CORRELATIVO_COLECCION_PADRE
			,V_NOMBRE
			,V_NIVEL
			,V_NRO_ORDEN
			,V_DESCRIPCION
			,V_COLOR
			,(SELECT current timestamp FROM sysibm.sysdummy1)
			,V_USUARIO_REGISTRA
			,0);
	END;
/				  
	
CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_COLECCION_DEL(IN V_CORRELATIVO_COLECCION INTEGER, IN V_USUARIO_MODIFICACION VARCHAR(50))
LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN
		DECLARE TOTAL_COLECCIONES_HIJAS INTEGER DEFAULT 0;
		DECLARE TOTAL_ARCHIVOS INTEGER DEFAULT 0;

		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR
			SELECT 1 as codigoRespuesta FROM sysibm.sysdummy1;

		DECLARE C2 CURSOR WITH RETURN TO CLIENT FOR
			SELECT 2 as codigoRespuesta FROM sysibm.sysdummy1;

		SELECT COUNT(*) INTO TOTAL_COLECCIONES_HIJAS FROM KSK_KIOSKO.KSK_COLECCION COL WHERE COL.CORRELATIVO_COLECCION_PADRE = V_CORRELATIVO_COLECCION AND COL.ELIMINADO = 0;
		SELECT COUNT(*) INTO TOTAL_ARCHIVOS FROM KSK_KIOSKO.KSK_ARCHIVO AR WHERE AR.CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION AND AR.ELIMINADO = 0;

		IF TOTAL_COLECCIONES_HIJAS + TOTAL_ARCHIVOS <=0 THEN
			update KSK_KIOSKO.KSK_COLECCION
			set nro_orden = nro_orden - 1
			where eliminado = 0
				and CORRELATIVO_COLECCION_PADRE = (SELECT CORRELATIVO_COLECCION_PADRE FROM KSK_KIOSKO.KSK_COLECCION WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION)
				and nro_orden > (SELECT NRO_ORDEN FROM KSK_KIOSKO.KSK_COLECCION WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION); 

			UPDATE KSK_KIOSKO.KSK_COLECCION
			SET ELIMINADO = 1,
				USUARIO_MODIFICACION = V_USUARIO_MODIFICACION,
				FECHA_MODIFICACION = (SELECT current timestamp FROM sysibm.sysdummy1)
			WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION;
			OPEN C1;
		ELSE
			OPEN C2;
		END IF;
	END;
/ 			

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_COLECCION_SEL_PK(IN V_CORRELATIVO_COLECCION INTEGER DEFAULT NULL)
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_COLECCION as correlativoColeccion,
				   CORRELATIVO_COLECCION_PADRE as correlativoColeccionPadre,
				   NOMBRE as nombre,
				   NIVEL as nivel,			
				   NRO_ORDEN as nroOrden,
				   DESCRIPCION as descripcion,
				   COLOR AS color
			FROM KSK_KIOSKO.KSK_COLECCION
			WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION;
		OPEN C1;	
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_COLECCION_UPD(IN V_CORRELATIVO_COLECCION INTEGER
														,IN V_CORRELATIVO_COLECCION_PADRE INTEGER
														,IN V_NOMBRE VARCHAR(50)
														,IN V_NIVEL INTEGER
														,IN V_NRO_ORDEN INTEGER
														,IN V_DESCRIPCION VARCHAR(100)
														,IN V_COLOR VARCHAR(20)
														,IN V_USUARIO_MODIFICACION VARCHAR(50)
														)
	BEGIN
		UPDATE KSK_KIOSKO.KSK_COLECCION
		SET NRO_ORDEN = (SELECT NRO_ORDEN FROM KSK_KIOSKO.KSK_COLECCION WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION)
		WHERE ELIMINADO = 0 AND NRO_ORDEN = V_NRO_ORDEN AND CORRELATIVO_COLECCION_PADRE = V_CORRELATIVO_COLECCION_PADRE; 

		UPDATE KSK_KIOSKO.KSK_COLECCION
		SET CORRELATIVO_COLECCION_PADRE = V_CORRELATIVO_COLECCION_PADRE,
			NOMBRE = V_NOMBRE,
			NIVEL = V_NIVEL,
			NRO_ORDEN = V_NRO_ORDEN,
			DESCRIPCION = V_DESCRIPCION,
			COLOR = V_COLOR,
			USUARIO_MODIFICACION = V_USUARIO_MODIFICACION,
			FECHA_MODIFICACION = (SELECT current timestamp FROM sysibm.sysdummy1)
		WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION;
	END;
/


CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ARCHIVO_SEL_POR_CORRELPAD_NOMBR_DESC(IN V_CORRELATIVO_COLECCION INTEGER
															   ,IN V_NOMBRE VARCHAR(50)
															   ,IN V_DESCRIPCION VARCHAR(200)
															  )
	LANGUAGE SQL DYNAMIC RESULT SETS 1															  
	BEGIN
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_ARCHIVO as correlativoArchivo,
				   CORRELATIVO_COLECCION as correlativoColeccion,
				   KSK_KIOSKO.FN_OBTENER_CODIGO_PAIS(CORRELATIVO_PAIS) as pais,
				   DESCARGABLE as descargable,
				   DESCRIPCION as descripcion,
				   DESTACADO as destacado,
				   EXTENSION as extension,				    
				   VARCHAR_FORMAT(FECHA_CADUCIDAD, 'YYYY-MM-DD') as fechaCaducidad,
				   VARCHAR_FORMAT(FECHA_INICIO, 'YYYY-MM-DD') as fechaInicio,				    
				   NOMBRE as nombre,
				   NRO_ORDEN as nroOrden,
				   RUTA_ARCHIVO as rutaArchivo,
				   RUTA_IMGPREVIA as rutaImgprevia,
				   TAMANHO as tamanho,
				   CASE
					WHEN (SELECT current timestamp FROM sysibm.sysdummy1) < FECHA_INICIO  THEN 'Por publicar'
					WHEN ((SELECT current timestamp FROM sysibm.sysdummy1) >= FECHA_INICIO AND (SELECT current timestamp FROM sysibm.sysdummy1) < FECHA_CADUCIDAD)  THEN 'Publicado'
					WHEN (SELECT current timestamp FROM sysibm.sysdummy1) >= FECHA_CADUCIDAD  THEN 'Caducado'
				   END as estado,
				   KSK_KIOSKO.FN_OBTENER_ROLES_ARCHIVO(CORRELATIVO_ARCHIVO) as roles
			FROM KSK_KIOSKO.KSK_ARCHIVO
			WHERE (UPPER(TRIM(NOMBRE)) LIKE '%' || UPPER(TRIM(COALESCE(V_NOMBRE,''))) || '%')
			OR (UPPER(TRIM(DESCRIPCION)) LIKE '%' || UPPER(TRIM(COALESCE(V_DESCRIPCION,''))) || '%');
			
		DECLARE C2 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_ARCHIVO as correlativoArchivo,
				   CORRELATIVO_COLECCION as correlativoColeccion,
				   KSK_KIOSKO.FN_OBTENER_CODIGO_PAIS(CORRELATIVO_PAIS) as pais,
				   DESCARGABLE as descargable,
				   DESCRIPCION as descripcion,
				   DESTACADO as destacado,
				   EXTENSION as extension,
				   VARCHAR_FORMAT(FECHA_CADUCIDAD, 'YYYY-MM-DD') as fechaCaducidad,
				   VARCHAR_FORMAT(FECHA_INICIO, 'YYYY-MM-DD') as fechaInicio,
				   NOMBRE as nombre,
				   NRO_ORDEN as nroOrden,
				   RUTA_ARCHIVO as rutaArchivo,
				   RUTA_IMGPREVIA as rutaImgprevia,
				   TAMANHO as tamanho,
				   CASE
					WHEN (SELECT current timestamp FROM sysibm.sysdummy1) < FECHA_INICIO  THEN 'Por publicar'
					WHEN ((SELECT current timestamp FROM sysibm.sysdummy1) >= FECHA_INICIO AND (SELECT current timestamp FROM sysibm.sysdummy1) < FECHA_CADUCIDAD)  THEN 'Publicado'
					WHEN (SELECT current timestamp FROM sysibm.sysdummy1) >= FECHA_CADUCIDAD  THEN 'Caducado'
				   END as estado,
				   KSK_KIOSKO.FN_OBTENER_ROLES_ARCHIVO(CORRELATIVO_ARCHIVO) as roles
			FROM KSK_KIOSKO.KSK_ARCHIVO
			WHERE CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION;

		IF V_CORRELATIVO_COLECCION IS NULL THEN		
			OPEN C1;
		ELSE	
			OPEN C2;
		END IF;			
	END;
/

	
CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ARCHIVO_SEL_PK(IN V_CORRELATIVO_ARCHIVO INTEGER DEFAULT NULL)
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_ARCHIVO as correlativoArchivo,
				   CORRELATIVO_COLECCION as correlativoColeccion,
				   KSK_KIOSKO.FN_OBTENER_CODIGO_PAIS(CORRELATIVO_PAIS) as pais,
				   NOMBRE as nombre,
				   DESCRIPCION as descripcion,
				   TAMANHO as tamanho,
				   EXTENSION as extension,
				   NRO_ORDEN as nroOrden,
				   DESCARGABLE as descargable,
				   DESTACADO as destacado,
				   RUTA_IMGPREVIA as rutaImgprevia,
				   RUTA_ARCHIVO AS rutaArchivo,
				   VARCHAR_FORMAT(FECHA_INICIO, 'YYYY-MM-DD') as fechaInicio,
				   VARCHAR_FORMAT(FECHA_CADUCIDAD, 'YYYY-MM-DD') as fechaCaducidad
			FROM KSK_KIOSKO.KSK_ARCHIVO
			WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO;
		OPEN C1;	
	END;
/


CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ARCHIVO_UPD(IN V_CORRELATIVO_ARCHIVO INTEGER
															   ,IN V_CORRELATIVO_COLECCION INTEGER
															   ,IN V_CORRELATIVO_PAIS INTEGER
															   ,IN V_NOMBRE VARCHAR(50)
															   ,IN V_DESCRIPCION VARCHAR(200)
															   ,IN V_TAMANHO VARCHAR(10)
															   ,IN V_EXTENSION VARCHAR(5)
															   ,IN V_NRO_ORDEN SMALLINT
															   ,IN V_DESCARGABLE SMALLINT
															   ,IN V_DESTACADO SMALLINT
															   ,IN V_RUTA_IMGPREVIA VARCHAR(200)
															   ,IN V_RUTA_ARCHIVO VARCHAR(200)
															   ,IN V_FECHA_INICIO DATE
															   ,IN V_FECHA_CADUCIDAD DATE
															   ,IN V_USUARIO_MODIFICACION VARCHAR(50)														  
															  )
	BEGIN	
	UPDATE KSK_KIOSKO.KSK_ARCHIVO 
	SET CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION,
		CORRELATIVO_PAIS = V_CORRELATIVO_PAIS,
		NOMBRE = V_NOMBRE,
		DESCRIPCION = V_DESCRIPCION,
		TAMANHO = V_TAMANHO,
		EXTENSION = V_EXTENSION,
		NRO_ORDEN = V_NRO_ORDEN,
		DESCARGABLE = V_DESCARGABLE,
		DESTACADO = V_DESTACADO,
		RUTA_IMGPREVIA = V_RUTA_IMGPREVIA,
		RUTA_ARCHIVO = V_RUTA_ARCHIVO,
		FECHA_INICIO = V_FECHA_INICIO,
		FECHA_CADUCIDAD = V_FECHA_CADUCIDAD,		
		USUARIO_MODIFICACION = V_USUARIO_MODIFICACION,
		FECHA_MODIFICACION = (SELECT current timestamp FROM sysibm.sysdummy1)
	WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ARCHIVO_UPD_POR_CORRELCOLECCION(IN V_CORRELATIVO_ARCHIVO INTEGER
															   ,IN V_CORRELATIVO_COLECCION INTEGER												  
															   ,IN V_USUARIO_MODIFICACION VARCHAR(50)
															  )
	BEGIN	
	UPDATE KSK_KIOSKO.KSK_ARCHIVO 
	SET CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION,
		USUARIO_MODIFICACION = V_USUARIO_MODIFICACION,
		FECHA_MODIFICACION = (SELECT current timestamp FROM sysibm.sysdummy1)
	WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_RUTA_SEL_POR_CORRELCOLECCION(IN V_CORRELATIVO_COLECCION INTEGER DEFAULT NULL)
 LANGUAGE SQL DYNAMIC RESULT SETS 1
 BEGIN  
  DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
   WITH RUTA_TEMPORAL (CORRELATIVO_COLECCION, CORRELATIVO_COLECCION_PADRE, NOMBRE,NIVEL) AS
           (
              SELECT RUTA.CORRELATIVO_COLECCION,RUTA.CORRELATIVO_COLECCION_PADRE,RUTA.NOMBRE,RUTA.NIVEL FROM KSK_KIOSKO.KSK_COLECCION RUTA
             WHERE RUTA.CORRELATIVO_COLECCION = V_CORRELATIVO_COLECCION
             UNION ALL
              SELECT COLECCION_HIJA.CORRELATIVO_COLECCION, COLECCION_HIJA.CORRELATIVO_COLECCION_PADRE, 
                     COLECCION_HIJA.NOMBRE,COLECCION_HIJA.NIVEL
                 FROM KSK_KIOSKO.KSK_COLECCION COLECCION_HIJA,RUTA_TEMPORAL COLECCION_PADRE
                 WHERE COLECCION_HIJA.CORRELATIVO_COLECCION = COLECCION_PADRE.CORRELATIVO_COLECCION_PADRE
           )

   SELECT 
   CORRELATIVO_COLECCION as correlativoColeccion, 
   CORRELATIVO_COLECCION_PADRE as correlativoColeccionPadre, 
   NOMBRE as nombre,
   NIVEL as nivel
   FROM RUTA_TEMPORAL ORDER BY NIVEL ASC;
  OPEN C1; 
 
 END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ARCHIVO_INS( IN V_CORRELATIVO_COLECCION INTEGER
															   ,IN V_CORRELATIVO_PAIS INTEGER
															   ,IN V_NOMBRE VARCHAR(50)
															   ,IN V_DESCRIPCION VARCHAR(200)
															   ,IN V_TAMANHO VARCHAR(10)
															   ,IN V_EXTENSION VARCHAR(5)
															   ,IN V_NRO_ORDEN SMALLINT
															   ,IN V_DESCARGABLE SMALLINT
															   ,IN V_DESTACADO SMALLINT
															   ,IN V_RUTA_IMGPREVIA VARCHAR(200)
															   ,IN V_RUTA_ARCHIVO VARCHAR(200)
															   ,IN V_FECHA_INICIO DATE
															   ,IN V_FECHA_CADUCIDAD DATE
															   ,IN V_ELIMINADO INTEGER
															   ,IN V_USUARIO_REGISTRA VARCHAR(50)	
														)
	BEGIN	
	INSERT INTO KSK_KIOSKO.KSK_ARCHIVO( CORRELATIVO_COLECCION
										   ,CORRELATIVO_PAIS
										   ,NOMBRE
										   ,DESCRIPCION
										   ,TAMANHO
										   ,EXTENSION
										   ,NRO_ORDEN
										   ,DESCARGABLE
										   ,DESTACADO
										   ,RUTA_IMGPREVIA
										   ,RUTA_ARCHIVO
										   ,FECHA_INICIO
										   ,FECHA_CADUCIDAD
										   ,ELIMINADO
										   ,USUARIO_REGISTRA
										   ,FECHA_REGISTRA)
    VALUES(V_CORRELATIVO_COLECCION
		   ,V_CORRELATIVO_PAIS
		   ,V_NOMBRE
		   ,V_DESCRIPCION
		   ,V_TAMANHO
		   ,V_EXTENSION
		   ,V_NRO_ORDEN
		   ,V_DESCARGABLE
		   ,V_DESTACADO
		   ,V_RUTA_IMGPREVIA
		   ,V_RUTA_ARCHIVO
		   ,V_FECHA_INICIO
		   ,V_FECHA_CADUCIDAD
		   ,V_ELIMINADO
		   ,V_USUARIO_REGISTRA
		   ,(SELECT current timestamp FROM sysibm.sysdummy1));	
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_DISPOSITIVO_ACTIVO_DEL(IN V_TOKEN VARCHAR(100))
	BEGIN
	DELETE FROM KSK_KIOSKO.KSK_DISPOSITIVO_ACTIVO WHERE TOKEN = V_TOKEN;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_SESION_WEB_DEL(IN V_TOKEN VARCHAR(100))
	BEGIN
	DELETE FROM KSK_KIOSKO.KSK_SESION_WEB WHERE TOKEN = V_TOKEN;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ROL_SEL_TODOS()
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_ROL as correlativoPais,
				   NOMBRE as nombre,
				   CODIGO_ROL as codigoPais
			FROM KSK_KIOSKO.KSK_ROL;
		OPEN C1;	
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ARCHIVO_DEL(IN V_CORRELATIVO_ARCHIVO INTEGER, IN V_USUARIO_MODIFICACION VARCHAR(50))
	BEGIN	
	UPDATE KSK_KIOSKO.KSK_ARCHIVO 
	SET ELIMINADO = 1,
		USUARIO_MODIFICACION = V_USUARIO_MODIFICACION,
		FECHA_MODIFICACION = (SELECT current timestamp FROM sysibm.sysdummy1)
	WHERE CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_PARAMETRO_SEL_NOMBRE_PARAMETRO(IN V_NOMBRE_PARAMETRO VARCHAR(50))
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_PARAMETRO as correlativoParametro,
				   NOMBRE_PARAMETRO as nombre,
				   VALOR_PARAMETRO as valor
			FROM KSK_KIOSKO.KSK_PARAMETRO
			WHERE UPPER(TRIM(NOMBRE_PARAMETRO)) = UPPER(TRIM(V_NOMBRE_PARAMETRO));
		OPEN C1;	
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_PARAMETRO_UPD(IN V_CORRELATIVO_PARAMETRO INTEGER,IN V_VALOR_PARAMETRO VARCHAR(50))
	BEGIN	
	UPDATE KSK_KIOSKO.KSK_PARAMETRO 
	SET VALOR_PARAMETRO = V_VALOR_PARAMETRO		
	WHERE CORRELATIVO_PARAMETRO = V_CORRELATIVO_PARAMETRO;	
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_INSERT_OR_UPDATE_PAIS(IN V_CODIGO_PAIS VARCHAR(10),IN V_NOMBRE VARCHAR(50))
	BEGIN
	MERGE INTO KSK_KIOSKO.KSK_PAIS AS P
	USING (VALUES (V_CODIGO_PAIS, V_NOMBRE)) AS PAIS_TMP (CODIGO_PAIS, NOMBRE) ON UPPER(TRIM(P.CODIGO_PAIS)) = UPPER(TRIM(PAIS_TMP.CODIGO_PAIS))
	WHEN MATCHED THEN
		UPDATE SET NOMBRE = V_NOMBRE
	WHEN NOT MATCHED THEN
		INSERT (NOMBRE, CODIGO_PAIS) VALUES (PAIS_TMP.NOMBRE, TRIM(PAIS_TMP.CODIGO_PAIS))
	ELSE IGNORE;	
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_SESION_WEB_SEL_POR_TOKEN(IN V_TOKEN VARCHAR(100))
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_SESION_WEB as correlativoSesionWeb,
				   CORRELATIVO_PAIS as correlativoPais,
				   USUARIO as usuario,
				   CLAVE as clave,
				   TOKEN as token ,
				   FECHA_REGISTRO fechaRegistro
			FROM KSK_KIOSKO.KSK_SESION_WEB
			WHERE TOKEN = V_TOKEN;
		OPEN C1;	
	END;
/	

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_DISPOSITIVO_ACTIVO_SEL_POR_TOKEN(IN V_TOKEN VARCHAR(100))
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN		
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR 
			SELECT CORRELATIVO_DISPOSITIVO_ACTIVO as correlativoDispositivoActivo,
				   CORRELATIVO_PAIS as correlativoPais,
				   USUARIO as usuario,
				   CLAVE as clave,
				   NOTIFICACION_IDENTIFICADOR as notificacionIdentificador,
				   DISPOSITIVO_SIS as dispositivoSis,
				   DISPOSITIVO_IDENTIFICADOR as dispositivoIdentificador,
				   TOKEN as token
			FROM KSK_KIOSKO.KSK_DISPOSITIVO_ACTIVO
			WHERE TOKEN = V_TOKEN;
		OPEN C1;	
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_DISPOSITIVO_ACTIVO_SEL_POR_PAIS(IN V_CORRELATIVO_PAIS VARCHAR(200)
																		  ,IN V_DIASINACTIVIDAD INTEGER
																		   )
	LANGUAGE SQL DYNAMIC RESULT SETS 1
	BEGIN
		DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR
			SELECT CORRELATIVO_DISPOSITIVO_ACTIVO as correlativoDispositivoActivo,
				   CORRELATIVO_PAIS as correlativoPais,
				   USUARIO as usuario,
				   CLAVE as clave,
				   NOTIFICACION_IDENTIFICADOR as notificacionIdentificador,
				   DISPOSITIVO_SIS as dispositivoSis,
				   DISPOSITIVO_IDENTIFICADOR as dispositivoIdentificador,
				   TOKEN as token,
				   FECHA_REGISTRO as fechaRegistro,
				   FECHA_ULTIMA_SINC as fechaUltimaSinc
			FROM KSK_KIOSKO.KSK_DISPOSITIVO_ACTIVO
			WHERE CORRELATIVO_PAIS = CORRELATIVO_PAIS;
				  --AND(DAYS(FECHA_ULTIMA_SINC) >= DAYS(CURRENT_DATE)- V_DIASINACTIVIDAD);
		OPEN C1;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ARCHIVO_NOTIFICADO_UPD()
	BEGIN	
	UPDATE KSK_KIOSKO.KSK_ARCHIVO 
	SET NOTIFICADO = 1
	WHERE NOTIFICADO = 0 
		  --AND (FECHA_INICIO >= (SELECT current date FROM sysibm.sysdummy1) AND FECHA_CADUCIDAD <= (SELECT current timestamp FROM sysibm.sysdummy1))
		  AND ELIMINADO = 0;
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_INS_OR_UPD_DISPOSITIVO_POR_DISP_ID(IN V_CORRELATIVO_PAIS 	INTEGER,
																			  IN V_USUARIO              VARCHAR(50),
																			  IN V_CLAVE                VARCHAR(50),
																			  IN V_NOTIFICACION_IDENTIFICADOR VARCHAR(300),
																			  IN V_DISPOSITIVO_SIS      VARCHAR(300),
																			  IN V_DISPOSITIVO_IDENTIFICADOR VARCHAR(300),
																			  IN V_TOKEN                VARCHAR(300),																			 
																			  IN V_FECHA_ULTIMA_SINC    DATE
																			 )
	BEGIN
	MERGE INTO KSK_KIOSKO.KSK_DISPOSITIVO_ACTIVO AS DISPOSITIVO
	USING (
		   VALUES (V_CORRELATIVO_PAIS,
				   V_USUARIO,
				   V_CLAVE,
				   V_NOTIFICACION_IDENTIFICADOR,
				   V_DISPOSITIVO_SIS,
				   V_DISPOSITIVO_IDENTIFICADOR,
				   V_TOKEN,
				   (SELECT current timestamp FROM sysibm.sysdummy1),
				   (SELECT current timestamp FROM sysibm.sysdummy1)) 
		  ) AS DISPOSITIVO_ACTIVO_TMP ( CORRELATIVO_PAIS,
										USUARIO,
										CLAVE,
										NOTIFICACION_IDENTIFICADOR,
										DISPOSITIVO_SIS,
										DISPOSITIVO_IDENTIFICADOR,
										TOKEN,
										FECHA_REGISTRO,
										FECHA_ULTIMA_SINC
									   ) ON UPPER(TRIM(DISPOSITIVO.DISPOSITIVO_IDENTIFICADOR)) = UPPER(TRIM(DISPOSITIVO_ACTIVO_TMP.DISPOSITIVO_IDENTIFICADOR))
	WHEN MATCHED THEN
		UPDATE SET CORRELATIVO_PAIS = V_CORRELATIVO_PAIS,
				   USUARIO = V_USUARIO,
				   CLAVE = V_CLAVE,
				   NOTIFICACION_IDENTIFICADOR = V_NOTIFICACION_IDENTIFICADOR,
				   DISPOSITIVO_SIS = V_DISPOSITIVO_SIS,
				   DISPOSITIVO_IDENTIFICADOR = V_DISPOSITIVO_IDENTIFICADOR,
				   TOKEN = V_TOKEN,
				   FECHA_REGISTRO = (SELECT current timestamp FROM sysibm.sysdummy1),
				   FECHA_ULTIMA_SINC = (SELECT current timestamp FROM sysibm.sysdummy1)
	WHEN NOT MATCHED THEN
		INSERT (CORRELATIVO_PAIS,
				USUARIO,
				CLAVE,
				NOTIFICACION_IDENTIFICADOR,
				DISPOSITIVO_SIS,
				DISPOSITIVO_IDENTIFICADOR,
				TOKEN,
				FECHA_REGISTRO,
				FECHA_ULTIMA_SINC)
		VALUES(DISPOSITIVO_ACTIVO_TMP.CORRELATIVO_PAIS,
			   DISPOSITIVO_ACTIVO_TMP.USUARIO,
			   DISPOSITIVO_ACTIVO_TMP.CLAVE,
			   DISPOSITIVO_ACTIVO_TMP.NOTIFICACION_IDENTIFICADOR,
			   DISPOSITIVO_ACTIVO_TMP.DISPOSITIVO_SIS,
			   DISPOSITIVO_ACTIVO_TMP.DISPOSITIVO_IDENTIFICADOR,
			   DISPOSITIVO_ACTIVO_TMP.TOKEN,
			   DISPOSITIVO_ACTIVO_TMP.FECHA_REGISTRO,
			   DISPOSITIVO_ACTIVO_TMP.FECHA_ULTIMA_SINC
			  )
	ELSE IGNORE;
	END;
/

CREATE OR REPLACE FUNCTION KSK_KIOSKO.FN_OBTENER_ROLES_ARCHIVO(V_CORRELATIVO_ARCHIVO INTEGER)
 RETURNS VARCHAR(100)
 LANGUAGE SQL
  BEGIN 
   DECLARE ROLES_PARA_ARCHIVO VARCHAR(100)  DEFAULT '';
   FOR CURSOR_TEMPORAL AS C1 CURSOR 
   FOR 
    SELECT CONCAT(SUBSTR(ROL.NOMBRE,1,1),CAST('-' AS VARCHAR(10))) AS ABREVIATURA
    FROM KSK_KIOSKO.KSK_ARCHIVO_ROL ARCHIVO
   LEFT JOIN KSK_KIOSKO.KSK_ROL ROL ON (ARCHIVO.CORRELATIVO_ROL = ROL.CORRELATIVO_ROL)
    WHERE ARCHIVO.CORRELATIVO_ARCHIVO = V_CORRELATIVO_ARCHIVO 
    DO SET ROLES_PARA_ARCHIVO = CONCAT(ROLES_PARA_ARCHIVO, CAST(CURSOR_TEMPORAL.ABREVIATURA AS VARCHAR(100))); 
  END FOR; 
   IF LENGTH(LTRIM(ROLES_PARA_ARCHIVO))>0 THEN
	SET ROLES_PARA_ARCHIVO = SUBSTR(ROLES_PARA_ARCHIVO,1,LENGTH(ROLES_PARA_ARCHIVO)-1);
   END IF;
   RETURN LTRIM(ROLES_PARA_ARCHIVO); 
  END;  
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_ELIMINAR_SESION_WEB_SI_ES_EXPIRADA(IN V_TOKEN VARCHAR(100))
	BEGIN
	DELETE FROM KSK_KIOSKO.KSK_SESION_WEB WHERE TOKEN = V_TOKEN
	AND (FECHA_REGISTRO + CAST((SELECT VALOR_PARAMETRO FROM KSK_KIOSKO.KSK_PARAMETRO WHERE NOMBRE_PARAMETRO = 'HorasExpiracionToken') AS INTEGER) HOURS <= (SELECT current timestamp FROM sysibm.sysdummy1));
	END;
/

CREATE OR REPLACE PROCEDURE KSK_KIOSKO.USP_OBTENER_POR_NOTIFICAR (IN correlativoPais INT)
LANGUAGE SQL DYNAMIC RESULT SETS 1
BEGIN
	DECLARE C1 CURSOR WITH RETURN TO CLIENT FOR
		select count(1) as cantidadNotificar 
		from KSK_KIOSKO.KSK_ARCHIVO 
		where sysdate between fecha_inicio AND fecha_caducidad 
			AND (notificado IS NULL OR notificado = 0) 
			AND eliminado = 0
			AND correlativo_pais = correlativoPais;
	OPEN C1;
END;
/

CREATE OR REPLACE FUNCTION KSK_KIOSKO.FN_OBTENER_CORRELATIVO_PAIS(IN V_PAIS VARCHAR(10))
 RETURNS INTEGER
 LANGUAGE SQL
  BEGIN 
   DECLARE R_CORRELATIVO_PAIS INTEGER;  
   SELECT CORRELATIVO_PAIS INTO R_CORRELATIVO_PAIS FROM KSK_KIOSKO.KSK_PAIS WHERE CODIGO_PAIS = V_PAIS;
   RETURN R_CORRELATIVO_PAIS; 
  END;  
/

CREATE OR REPLACE FUNCTION KSK_KIOSKO.FN_OBTENER_CODIGO_PAIS(IN V_CORRELATIVO_PAIS INTEGER)
 RETURNS VARCHAR(10)
 LANGUAGE SQL
  BEGIN 
   DECLARE R_PAIS VARCHAR(10);  
   SELECT CODIGO_PAIS INTO R_PAIS FROM KSK_KIOSKO.KSK_PAIS WHERE CORRELATIVO_PAIS = V_CORRELATIVO_PAIS;
   RETURN R_PAIS; 
  END;  
/
